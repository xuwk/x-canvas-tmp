

// @source: ../src/xc.js

(function() {
this.xc = {
version: "0.1.0"
}, xc.ld = {}, xc.ld.path = {
paths: {},
addPath: function(e, t) {
return this.paths[e] = t;
},
addPaths: function(e) {
for (var t in e) this.addPath(t, e[t]);
},
rewrite: function(e, t) {
var n = this.paths, r, i;
for (r in n) {
i = t.slice(r.length, 1) || "/";
if (t.slice(0, r.length) === r && i === "/") return n[r] + t.slice(r.length);
i = e.slice(r.length, 1) || "/";
if (e.slice(0, r.length) === r && i === "/") return n[r] + e.slice(r.length) + t;
}
return e + t;
},
canonicalize: function(e) {
var t = this.paths, n, r, i;
for (n in t) {
r = t[n], i = e.slice(r.length, 1) || "/";
if (e.slice(0, r.length) === r && i == "/") return n + e.slice(r.length);
}
return e;
},
splitPath: function(e) {
return e.replace(/\\/g, "/").replace(/\/\//g, "/").replace(/:\//, "://").split("/");
},
stripPath: function(e) {
var t = this.splitPath(e), n, r;
for (n = t.length - 1; n >= 0; n--) r = t[n], r === "." && t.splice(n, 1);
for (n = t.length - 1; n >= 0; n--) r = t[n], r === ".." && n > 0 && t[n - 1] !== ".." && (t.splice(n - 1, 2), n -= 1);
return t.join("/");
}
}, xc.ld.Loader = function(e) {
this.machine = e, this.stack = [], this.scripts = {};
}, xc.ld.Loader.prototype = {
scriptFolder: "",
scriptPath: "",
verbose: !1,
load: function(e, t) {
this.stack.push({
index: 0,
depends: e || [],
folder: this.scriptFolder,
path: this.scriptPath,
callback: t
}), this.verbose && console.group("* load [" + e + "]"), this.scriptPath || this.more();
},
more: function() {
var e;
if (this.stack.length) {
e = this.stack[this.stack.length - 1];
if (e.index < e.depends.length) {
this.scriptFolder = e.folder, this.scriptPath = e.path, this.continueBlock(e);
return;
}
}
e = this.stack.pop(), e && (this.verbose && console.groupEnd("* done"), e.callback && e.callback()), this.stack.length && this.more();
},
continueBlock: function(e) {
var t = e.depends[e.index++];
this.require(t);
},
getPathPrefix: function(e) {
return e.slice(0, 5) !== "http:" ? this.scriptFolder : "";
},
require: function(e) {
var t = e.slice(0, 1);
if (t === "/" || t === "\\") e = e.slice(1);
var n = this.getPathPrefix(e);
path = xc.ld.path.rewrite(n, e), path = xc.ld.path.stripPath(path), path.slice(-3) === ".js" && path.slice(-10) !== "package.js" ? this.requireScript(path) : this.requirePackage(path);
},
decodeScriptPath: function(e) {
var t = "", n = "", r = xc.ld.path.splitPath(e);
return r.length && (n = r.pop(), t = r.join("/"), t = t ? t + "/" : ""), {
folder: t,
name: n
};
},
requireScript: function(e) {
if (this.scripts[e]) {
this.more();
return;
}
this.scripts[e] = !0;
var t = this.decodeScriptPath(e);
this.scriptFolder = xc.ld.path.canonicalize(t.folder), this.scriptPath = xc.ld.path.canonicalize(e), this.verbose && console.log("+ module: [" + e + "]"), this.machine.loadScript(e);
},
decodePackagePath: function(e) {
var t = "", n = "package.js", r = xc.ld.path.splitPath(e);
if (r.length) {
var i = r.pop() || r.pop() || "";
i.slice(-n.length) !== n ? r.push(i) : n = i, t = r.join("/"), t = t ? t + "/" : "", n = t + n;
}
return {
folder: t,
manifest: n
};
},
requirePackage: function(e) {
var t = this.decodePackagePath(e);
if (this.scripts[t.manifest]) {
this.more();
return;
}
this.scripts[t.manifest] = !0, this.scriptFolder = xc.ld.path.canonicalize(t.folder), this.scriptPath = xc.ld.path.canonicalize(t.manifest), this.machine.loadPackage(t.manifest);
}
};
var e, t = {
loadScript: function(t) {
var n = document.createElement("SCRIPT");
n.onload = n.onerror = n.onreadystatechange = function() {
(!n.readyState || n.readyState === "loaded" || n.readyState === "complete") && e.more();
}, n.src = t, document.getElementsByTagName("HEAD")[0].appendChild(n);
},
loadPackage: function(e) {
this.loadScript(e);
}
};
e = new xc.ld.Loader(t), xc.depends = function(t, n) {
e.load(t, n);
};
}).call(this);


// @source: ../src/core/lang.js

(function() {
Array.prototype.indexOf || (Array.prototype.indexOf = function(e) {
if (this === void 0 || this === null) throw new TypeError;
var t = Object(this), n = t.length >>> 0;
if (n === 0) return -1;
var r = 0;
arguments.length > 0 && (r = Number(arguments[1]), r !== r ? r = 0 : r !== 0 && r !== 1 / 0 && r !== -1 / 0 && (r = (r > 0 || -1) * Math.floor(Math.abs(r))));
if (r >= n) return -1;
var i = r >= 0 ? r : Math.max(n - Math.abs(r), 0);
for (; i < n; i++) if (i in t && t[i] === e) return i;
return -1;
}), Array.prototype.forEach || (Array.prototype.forEach = function(e, t) {
for (var n = 0, r = this.length >>> 0; n < r; n++) n in this && e.call(t, this[n], n, this);
}), Array.prototype.map || (Array.prototype.map = function(e, t) {
var n = [];
for (var r = 0, i = this.length >>> 0; r < i; r++) r in this && (n[r] = e.call(t, this[r], r, this));
return n;
}), Array.prototype.every || (Array.prototype.every = function(e, t) {
for (var n = 0, r = this.length >>> 0; n < r; n++) if (n in this && !e.call(t, this[n], n, this)) return !1;
return !0;
}), Array.prototype.some || (Array.prototype.some = function(e, t) {
for (var n = 0, r = this.length >>> 0; n < r; n++) if (n in this && e.call(t, this[n], n, this)) return !0;
return !1;
}), Array.prototype.filter || (Array.prototype.filter = function(e, t) {
var n = [], r;
for (var i = 0, s = this.length >>> 0; i < s; i++) i in this && (r = this[i], e.call(t, r, i, this) && n.push(r));
return n;
}), Array.prototype.reduce || (Array.prototype.reduce = function(e) {
var t = this.length >>> 0, n = 0, r;
if (arguments.length > 1) r = arguments[1]; else do {
if (n in this) {
r = this[n++];
break;
}
if (++n >= t) throw new TypeError;
} while (!0);
for (; n < t; n++) n in this && (r = e.call(null, r, this[n], n, this));
return r;
});
var e = Array.prototype.slice, t = Function.prototype.apply, n = function() {};
Function.prototype.bind || (Function.prototype.bind = function(r) {
var i = this, s = e.call(arguments, 1), o;
return s.length ? o = function() {
return t.call(i, this instanceof n ? this : r, s.concat(e.call(arguments)));
} : o = function() {
return t.call(i, this instanceof n ? this : r, arguments);
}, n.prototype = this.prototype, o.prototype = new n, o;
}), String.prototype.trim || (String.prototype.trim = function() {
return this.replace(/^\s+|\s+$/g, "");
});
})();


// @source: ../src/core/class.js

(function() {
var e = !1, t = /xyz/.test(function() {
xyz;
}) ? /\b_super\b/ : /.*/;
xc.class = function() {}, xc.class.create = function(n) {
var r = this.prototype;
e = !0;
var i = new this;
e = !1;
for (var s in n) i[s] = typeof n[s] == "function" && typeof r[s] == "function" && t.test(n[s]) ? function(e, t) {
return function() {
var n = this._super;
this._super = r[e];
var i = t.apply(this, arguments);
return this._super = n, i;
};
}(s, n[s]) : n[s];
var o = function() {
!e && this._init && this._init.apply(this, arguments);
};
return o.prototype = i, o.prototype.constructor = o, o.extend = arguments.callee, o;
};
})();


// @source: ../src/core/module.js

(function() {
xc.module = {};
var e = {}, t = {};
xc.module.define = function(t, n) {
e[t] = n;
}, xc.module.require = function(n) {
if (t[n]) return t[n];
if (e[n]) {
var r = e[n];
if (Object.prototype.toString.call(r) == "[object Function]") {
var i = {}, s = r(i);
t[n] = s === undefined ? i : s;
} else t[n] = r;
return t[n];
}
throw "module [" + n + "] not found";
}, xc.module.getIds = function() {
return Object.keys(e);
};
})();


// @source: ../src/lib/createjs/easeljs/display/Bitmap.js

xc.module.define("xc.createjs.Bitmap", function(e) {
var t = xc.module.require("xc.createjs.DisplayObject"), n = t.extend({
initialize: function(e) {
this._super(), typeof e == "string" ? (this.image = new Image, this.image.src = e) : this.image = e;
},
image: null,
snapToPixel: !0,
sourceRect: null,
isVisible: function() {
var e = this.cacheCanvas || this.image && (this.image.complete || this.image.getContext || this.image.readyState >= 2);
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && e);
},
draw: function(e, t) {
if (this._super(e, t)) return !0;
var n = this.sourceRect;
return n ? e.drawImage(this.image, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height) : e.drawImage(this.image, 0, 0), !0;
},
clone: function() {
var e = new n(this.image);
return this.sourceRect && (e.sourceRect = this.sourceRect.clone()), this.cloneProps(e), e;
},
toString: function() {
return "[Bitmap (name=" + this.name + ")]";
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/display/BitmapAnimation.js

xc.module.define("xc.createjs.BitmapAnimation", function(e) {
var t = xc.module.require("xc.createjs.DisplayObject"), n = t.extend({
initialize: function(e) {
this._super(), this.spriteSheet = e;
},
currentFrame: -1,
currentAnimation: null,
paused: !0,
spriteSheet: null,
snapToPixel: !0,
offset: 0,
currentAnimationFrame: 0,
_advanceCount: 0,
_animation: null,
isVisible: function() {
var e = this.cacheCanvas || this.spriteSheet.complete && this.currentFrame >= 0;
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && e);
},
draw: function(e, t) {
if (this._super(e, t)) return !0;
this._normalizeFrame();
var n = this.spriteSheet.getFrame(this.currentFrame);
if (!n) return !1;
var r = n.rect;
return e.drawImage(n.image, r.x, r.y, r.width, r.height, -n.regX, -n.regY, r.width, r.height), !0;
},
play: function() {
this.paused = !1;
},
stop: function() {
this.paused = !0;
},
gotoAndPlay: function(e) {
this.paused = !1, this._goto(e);
},
gotoAndStop: function(e) {
this.paused = !0, this._goto(e);
},
advance: function() {
this._animation ? this.currentAnimationFrame++ : this.currentFrame++, this._normalizeFrame();
},
getBounds: function() {
return this.spriteSheet.getFrameBounds(this.currentFrame);
},
clone: function() {
var e = new n(this.spriteSheet);
return this.cloneProps(e), e;
},
toString: function() {
return "[BitmapAnimation (name=" + this.name + ")]";
},
_tick: function(e) {
var t = this._animation ? this._animation.frequency : 1;
!this.paused && (++this._advanceCount + this.offset) % t == 0 && this.advance(), this._super(e);
},
_normalizeFrame: function() {
var e = this._animation, t = this.currentFrame, n = this.paused, r;
if (e) {
r = e.frames.length;
if (this.currentAnimationFrame >= r) {
var i = e.next;
this._dispatchAnimationEnd(e, t, n, i, r - 1) || (i ? this._goto(i) : (this.paused = !0, this.currentAnimationFrame = e.frames.length - 1, this.currentFrame = e.frames[this.currentAnimationFrame]));
} else this.currentFrame = e.frames[this.currentAnimationFrame];
} else r = this.spriteSheet.getNumFrames(), t >= r && (this._dispatchAnimationEnd(e, t, n, r - 1) || (this.currentFrame = 0));
},
_dispatchAnimationEnd: function(e, t, n, r, i) {
var s = e ? e.name : null;
return this.dispatchEvent({
type: "animationend",
name: s,
next: r
}), !n && this.paused && (this.currentAnimationFrame = i), this.paused != n || this._animation != e || this.currentFrame != t;
},
cloneProps: function(e) {
this._super(e), e.currentFrame = this.currentFrame, e.currentAnimation = this.currentAnimation, e.paused = this.paused, e.offset = this.offset, e._animation = this._animation, e.currentAnimationFrame = this.currentAnimationFrame;
},
_goto: function(e) {
if (isNaN(e)) {
var t = this.spriteSheet.getAnimation(e);
t && (this.currentAnimationFrame = 0, this._animation = t, this.currentAnimation = e, this._normalizeFrame());
} else this.currentAnimation = this._animation = null, this.currentFrame = e;
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/display/Container.js

xc.module.define("xc.createjs.Container", function(e) {
var t = xc.module.require("xc.createjs.DisplayObject"), n = t.extend({
initialize: function() {
this._super(), this.children = [];
},
children: null,
isVisible: function() {
var e = this.cacheCanvas || this.children.length;
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && e);
},
draw: function(e, t) {
if (this._super(e, t)) return !0;
var n = this.children.slice(0);
for (var r = 0, i = n.length; r < i; r++) {
var s = n[r];
if (!s.isVisible()) continue;
e.save(), s.updateContext(e), s.draw(e), e.restore();
}
return !0;
},
addChild: function(e) {
if (e == null) return e;
var t = arguments.length;
if (t > 1) {
for (var n = 0; n < t; n++) this.addChild(arguments[n]);
return arguments[t - 1];
}
return e.parent && e.parent.removeChild(e), e.parent = this, this.children.push(e), e;
},
addChildAt: function(e, t) {
var n = arguments.length, r = arguments[n - 1];
if (r < 0 || r > this.children.length) return arguments[n - 2];
if (n > 2) {
for (var i = 0; i < n - 1; i++) this.addChildAt(arguments[i], r + i);
return arguments[n - 2];
}
return e.parent && e.parent.removeChild(e), e.parent = this, this.children.splice(t, 0, e), e;
},
removeChild: function(e) {
var t = arguments.length;
if (t > 1) {
var n = !0;
for (var r = 0; r < t; r++) n = n && this.removeChild(arguments[r]);
return n;
}
return this.removeChildAt(this.children.indexOf(e));
},
removeChildAt: function(e) {
var t = arguments.length;
if (t > 1) {
var n = [];
for (var r = 0; r < t; r++) n[r] = arguments[r];
n.sort(function(e, t) {
return t - e;
});
var i = !0;
for (var r = 0; r < t; r++) i = i && this.removeChildAt(n[r]);
return i;
}
if (e < 0 || e > this.children.length - 1) return !1;
var s = this.children[e];
return s && (s.parent = null), this.children.splice(e, 1), !0;
},
removeAllChildren: function() {
var e = this.children;
while (e.length) e.pop().parent = null;
},
getChildAt: function(e) {
return this.children[e];
},
getChildByName: function(e) {
var t = this.children;
for (var n = 0, r = t.length; n < r; n++) if (t[n].name == e) return t[n];
return null;
},
sortChildren: function(e) {
this.children.sort(e);
},
getChildIndex: function(e) {
return this.children.indexOf(e);
},
getNumChildren: function() {
return this.children.length;
},
swapChildrenAt: function(e, t) {
var n = this.children, r = n[e], i = n[t];
if (!r || !i) return;
n[e] = i, n[t] = r;
},
swapChildren: function(e, t) {
var n = this.children, r, i;
for (var s = 0, o = n.length; s < o; s++) {
n[s] == e && (r = s), n[s] == t && (i = s);
if (r != null && i != null) break;
}
if (s == o) return;
n[r] = t, n[i] = e;
},
setChildIndex: function(e, t) {
var n = this.children, r = n.length;
if (e.parent != this || t < 0 || t >= r) return "1";
for (var i = 0; i < r; i++) if (n[i] == e) break;
return i == r || i == t ? "2" : (n.splice(i, 1), t < i && t--, n.splice(t, 0, e), !0);
},
contains: function(e) {
while (e) {
if (e == this) return !0;
e = e.parent;
}
return !1;
},
hitTest: function(e, t) {
return this.getObjectUnderPoint(e, t) != null;
},
getObjectsUnderPoint: function(e, t) {
var n = [], r = this.localToGlobal(e, t);
return this._getObjectsUnderPoint(r.x, r.y, n), n;
},
getObjectUnderPoint: function(e, t) {
var n = this.localToGlobal(e, t);
return this._getObjectsUnderPoint(n.x, n.y);
},
clone: function(e) {
var t = new n;
this.cloneProps(t);
if (e) {
var r = t.children = [];
for (var i = 0, s = this.children.length; i < s; i++) {
var o = this.children[i].clone(e);
o.parent = t, r.push(o);
}
}
return t;
},
toString: function() {
return "[Container (name=" + this.name + ")]";
},
_tick: function(e) {
for (var t = this.children.length - 1; t >= 0; t--) {
var n = this.children[t];
undefined !== n && n._tick && n._tick(e);
}
this._super(e);
},
_getObjectsUnderPoint: function(e, r, i, s) {
var o = t._hitTestContext, u = t._hitTestCanvas, a = this._matrix, f = this._hasMouseHandler(s);
if (!this.hitArea && this.cacheCanvas && f) {
this.getConcatenatedMatrix(a), o.setTransform(a.a, a.b, a.c, a.d, a.tx - e, a.ty - r), o.globalAlpha = a.alpha, this.draw(o);
if (this._testHit(o)) return u.width = 0, u.width = 1, this;
}
var l = this.children.length;
for (var c = l - 1; c >= 0; c--) {
var h = this.children[c], p = h.hitArea;
if (!h.visible || !p && !h.isVisible() || s && !h.mouseEnabled) continue;
var d = s && h._hasMouseHandler(s);
if (h instanceof n && (!p || !d)) {
var v;
if (f) {
v = h._getObjectsUnderPoint(e, r);
if (v) return this;
} else {
v = h._getObjectsUnderPoint(e, r, i, s);
if (!i && v) return v;
}
} else if (!s || f || d) {
h.getConcatenatedMatrix(a), p && (a.appendTransform(p.x, p.y, p.scaleX, p.scaleY, p.rotation, p.skewX, p.skewY, p.regX, p.regY), a.alpha = p.alpha), o.globalAlpha = a.alpha, o.setTransform(a.a, a.b, a.c, a.d, a.tx - e, a.ty - r), (p || h).draw(o);
if (!this._testHit(o)) continue;
u.width = 0, u.width = 1;
if (f) return this;
if (!i) return h;
i.push(h);
}
}
return null;
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/display/DisplayObject.js

xc.module.define("xc.createjs.DisplayObject", function(e) {
var t = xc.module.require("xc.createjs.UID"), n = xc.module.require("xc.createjs.Matrix2D"), r = xc.module.require("xc.createjs.Point"), i = xc.module.require("xc.createjs.EventDispatcher"), s = i.extend({
initialize: function() {
this.id = t.get(), this._matrix = new n;
},
alpha: 1,
cacheCanvas: null,
id: -1,
mouseEnabled: !0,
name: null,
parent: null,
regX: 0,
regY: 0,
rotation: 0,
scaleX: 1,
scaleY: 1,
skewX: 0,
skewY: 0,
shadow: null,
visible: !0,
x: 0,
y: 0,
compositeOperation: null,
filters: null,
cacheID: 0,
mask: null,
hitArea: null,
cursor: null,
_cacheOffsetX: 0,
_cacheOffsetY: 0,
_cacheScale: 1,
_cacheDataURLID: 0,
_cacheDataURL: null,
_matrix: null,
isVisible: function() {
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);
},
draw: function(e, t) {
var n = this.cacheCanvas;
if (t || !n) return !1;
var r = this._cacheScale;
return e.drawImage(n, this._cacheOffsetX, this._cacheOffsetY, n.width / r, n.height / r), !0;
},
updateContext: function(e) {
var t, n = this.mask, r = this;
n && n.graphics && !n.graphics.isEmpty() && (t = n.getMatrix(n._matrix), e.transform(t.a, t.b, t.c, t.d, t.tx, t.ty), n.graphics.drawAsPath(e), e.clip(), t.invert(), e.transform(t.a, t.b, t.c, t.d, t.tx, t.ty)), t = r._matrix.identity().appendTransform(r.x, r.y, r.scaleX, r.scaleY, r.rotation, r.skewX, r.skewY, r.regX, r.regY), r.snapToPixel ? e.transform(t.a, t.b, t.c, t.d, t.tx + .5 | 0, t.ty + .5 | 0) : e.transform(t.a, t.b, t.c, t.d, t.tx, t.ty), e.globalAlpha *= r.alpha, r.compositeOperation && (e.globalCompositeOperation = r.compositeOperation), r.shadow && this._applyShadow(e, r.shadow);
},
cache: function(e, t, n, r, i) {
i = i || 1, this.cacheCanvas || (this.cacheCanvas = document.createElement("canvas")), this.cacheCanvas.width = Math.ceil(n * i), this.cacheCanvas.height = Math.ceil(r * i), this._cacheOffsetX = e, this._cacheOffsetY = t, this._cacheScale = i || 1, this.updateCache();
},
updateCache: function(e) {
var t = this.cacheCanvas, n = this._cacheScale, r = this._cacheOffsetX * n, i = this._cacheOffsetY * n;
if (!t) throw "cache() must be called before updateCache()";
var o = t.getContext("2d");
o.save(), e || o.clearRect(0, 0, t.width, t.height), o.globalCompositeOperation = e, o.setTransform(n, 0, 0, n, -r, -i), this.draw(o, !0), this._applyFilters(), o.restore(), this.cacheID = s._nextCacheID++;
},
uncache: function() {
this._cacheDataURL = this.cacheCanvas = null, this.cacheID = this._cacheOffsetX = this._cacheOffsetY = 0, this._cacheScale = 1;
},
getCacheDataURL: function() {
return this.cacheCanvas ? (this.cacheID != this._cacheDataURLID && (this._cacheDataURL = this.cacheCanvas.toDataURL()), this._cacheDataURL) : null;
},
getStage: function() {
var e = this;
while (e.parent) e = e.parent;
var t = xc.module.require("xc.createjs.Stage");
return e instanceof t ? e : null;
},
localToGlobal: function(e, t) {
var n = this.getConcatenatedMatrix(this._matrix);
return n == null ? null : (n.append(1, 0, 0, 1, e, t), new r(n.tx, n.ty));
},
globalToLocal: function(e, t) {
var n = this.getConcatenatedMatrix(this._matrix);
return n == null ? null : (n.invert(), n.append(1, 0, 0, 1, e, t), new r(n.tx, n.ty));
},
localToLocal: function(e, t, n) {
var r = this.localToGlobal(e, t);
return n.globalToLocal(r.x, r.y);
},
setTransform: function(e, t, n, r, i, s, o, u, a) {
return this.x = e || 0, this.y = t || 0, this.scaleX = n == null ? 1 : n, this.scaleY = r == null ? 1 : r, this.rotation = i || 0, this.skewX = s || 0, this.skewY = o || 0, this.regX = u || 0, this.regY = a || 0, this;
},
getMatrix: function(e) {
var t = this;
return (e ? e.identity() : new n).appendTransform(t.x, t.y, t.scaleX, t.scaleY, t.rotation, t.skewX, t.skewY, t.regX, t.regY).appendProperties(t.alpha, t.shadow, t.compositeOperation);
},
getConcatenatedMatrix: function(e) {
e ? e.identity() : e = new n;
var t = this;
while (t != null) e.prependTransform(t.x, t.y, t.scaleX, t.scaleY, t.rotation, t.skewX, t.skewY, t.regX, t.regY).prependProperties(t.alpha, t.shadow, t.compositeOperation), t = t.parent;
return e;
},
hitTest: function(e, t) {
var n = s._hitTestContext, r = s._hitTestCanvas;
n.setTransform(1, 0, 0, 1, -e, -t), this.draw(n);
var i = this._testHit(n);
return r.width = 0, r.width = 1, i;
},
set: function(e) {
for (var t in e) this[t] = e[t];
return this;
},
clone: function() {
var e = new s;
return this.cloneProps(e), e;
},
toString: function() {
return "[DisplayObject (name=" + this.name + ")]";
},
cloneProps: function(e) {
e.alpha = this.alpha, e.name = this.name, e.regX = this.regX, e.regY = this.regY, e.rotation = this.rotation, e.scaleX = this.scaleX, e.scaleY = this.scaleY, e.shadow = this.shadow, e.skewX = this.skewX, e.skewY = this.skewY, e.visible = this.visible, e.x = this.x, e.y = this.y, e.mouseEnabled = this.mouseEnabled, e.compositeOperation = this.compositeOperation, this.cacheCanvas && (e.cacheCanvas = this.cacheCanvas.cloneNode(!0), e.cacheCanvas.getContext("2d").putImageData(this.cacheCanvas.getContext("2d").getImageData(0, 0, this.cacheCanvas.width, this.cacheCanvas.height), 0, 0));
},
_applyShadow: function(e, t) {
t = t || Shadow.identity, e.shadowColor = t.color, e.shadowOffsetX = t.offsetX, e.shadowOffsetY = t.offsetY, e.shadowBlur = t.blur;
},
_tick: function(e) {
var t = this._listeners;
t && t.tick && this.dispatchEvent({
type: "tick",
params: e
});
},
_testHit: function(e) {
try {
var t = e.getImageData(0, 0, 1, 1).data[3] > 1;
} catch (n) {
if (!s.suppressCrossDomainErrors) throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.";
}
return t;
},
_applyFilters: function() {
if (!this.filters || this.filters.length == 0 || !this.cacheCanvas) return;
var e = this.filters.length, t = this.cacheCanvas.getContext("2d"), n = this.cacheCanvas.width, r = this.cacheCanvas.height;
for (var i = 0; i < e; i++) this.filters[i].applyFilter(t, 0, 0, n, r);
},
_hasMouseHandler: function(e) {
var t = this._listeners;
return !!(e & 1 && t && (this.hasEventListener("mousedown") || this.hasEventListener("click") || this.hasEventListener("dblclick")) || e & 2 && t && (this.hasEventListener("mouseover") || this.hasEventListener("mouseout")));
}
});
return s.suppressCrossDomainErrors = !1, s._hitTestCanvas = document.createElement("canvas"), s._hitTestCanvas.width = s._hitTestCanvas.height = 1, s._hitTestContext = s._hitTestCanvas.getContext("2d"), s._nextCacheID = 1, s;
});


// @source: ../src/lib/createjs/easeljs/display/Graphics.js

xc.module.define("xc.createjs.Graphics", function(e) {
function t(e, t, n) {
this.f = e, this.params = t, this.path = n == null ? !0 : n;
}
t.prototype.exec = function(e) {
this.f.apply(e, this.params);
};
var n = xc.class.create({
initialize: function() {
this.clear(), this._ctx = n._ctx;
},
_strokeInstructions: null,
_strokeStyleInstructions: null,
_ignoreScaleStroke: !1,
_fillInstructions: null,
_instructions: null,
_oldInstructions: null,
_activeInstructions: null,
_active: !1,
_dirty: !1,
isEmpty: function() {
return !(this._instructions.length || this._oldInstructions.length || this._activeInstructions.length);
},
draw: function(e) {
this._dirty && this._updateInstructions();
var t = this._instructions;
for (var n = 0, r = t.length; n < r; n++) t[n].exec(e);
},
drawAsPath: function(e) {
this._dirty && this._updateInstructions();
var t, n = this._instructions;
for (var r = 0, i = n.length; r < i; r++) ((t = n[r]).path || r == 0) && t.exec(e);
},
moveTo: function(e, n) {
return this._activeInstructions.push(new t(this._ctx.moveTo, [ e, n ])), this;
},
lineTo: function(e, n) {
return this._dirty = this._active = !0, this._activeInstructions.push(new t(this._ctx.lineTo, [ e, n ])), this;
},
arcTo: function(e, n, r, i, s) {
return this._dirty = this._active = !0, this._activeInstructions.push(new t(this._ctx.arcTo, [ e, n, r, i, s ])), this;
},
arc: function(e, n, r, i, s, o) {
return this._dirty = this._active = !0, o == null && (o = !1), this._activeInstructions.push(new t(this._ctx.arc, [ e, n, r, i, s, o ])), this;
},
quadraticCurveTo: function(e, n, r, i) {
return this._dirty = this._active = !0, this._activeInstructions.push(new t(this._ctx.quadraticCurveTo, [ e, n, r, i ])), this;
},
bezierCurveTo: function(e, n, r, i, s, o) {
return this._dirty = this._active = !0, this._activeInstructions.push(new t(this._ctx.bezierCurveTo, [ e, n, r, i, s, o ])), this;
},
rect: function(e, n, r, i) {
return this._dirty = this._active = !0, this._activeInstructions.push(new t(this._ctx.rect, [ e, n, r, i ])), this;
},
closePath: function() {
return this._active && (this._dirty = !0, this._activeInstructions.push(new t(this._ctx.closePath, []))), this;
},
clear: function() {
return this._instructions = [], this._oldInstructions = [], this._activeInstructions = [], this._strokeStyleInstructions = this._strokeInstructions = this._fillInstructions = null, this._active = this._dirty = !1, this;
},
beginFill: function(e) {
return this._active && this._newPath(), this._fillInstructions = e ? [ new t(this._setProp, [ "fillStyle", e ], !1), n.fillCmd ] : null, this;
},
beginLinearGradientFill: function(e, r, i, s, o, u) {
this._active && this._newPath();
var a = this._ctx.createLinearGradient(i, s, o, u);
for (var f = 0, l = e.length; f < l; f++) a.addColorStop(r[f], e[f]);
return this._fillInstructions = [ new t(this._setProp, [ "fillStyle", a ], !1), n.fillCmd ], this;
},
beginRadialGradientFill: function(e, r, i, s, o, u, a, f) {
this._active && this._newPath();
var l = this._ctx.createRadialGradient(i, s, o, u, a, f);
for (var c = 0, h = e.length; c < h; c++) l.addColorStop(r[c], e[c]);
return this._fillInstructions = [ new t(this._setProp, [ "fillStyle", l ], !1), n.fillCmd ], this;
},
beginBitmapFill: function(e, r, i) {
this._active && this._newPath(), r = r || "";
var s = this._ctx.createPattern(e, r), o = new t(this._setProp, [ "fillStyle", s ], !1), u;
return i ? u = [ o, new t(this._ctx.save, [], !1), new t(this._ctx.transform, [ i.a, i.b, i.c, i.d, i.tx, i.ty ], !1), n.fillCmd, new t(this._ctx.restore, [], !1) ] : u = [ o, n.fillCmd ], this._fillInstructions = u, this;
},
endFill: function() {
return this.beginFill();
},
setStrokeStyle: function(e, r, i, s, o) {
return this._active && this._newPath(), this._strokeStyleInstructions = [ new t(this._setProp, [ "lineWidth", e == null ? "1" : e ], !1), new t(this._setProp, [ "lineCap", r == null ? "butt" : isNaN(r) ? r : n.STROKE_CAPS_MAP[r] ], !1), new t(this._setProp, [ "lineJoin", i == null ? "miter" : isNaN(i) ? i : n.STROKE_JOINTS_MAP[i] ], !1), new t(this._setProp, [ "miterLimit", s == null ? "10" : s ], !1) ], this._ignoreScaleStroke = o, this;
},
beginStroke: function(e) {
return this._active && this._newPath(), this._strokeInstructions = e ? [ new t(this._setProp, [ "strokeStyle", e ], !1) ] : null, this;
},
beginLinearGradientStroke: function(e, n, r, i, s, o) {
this._active && this._newPath();
var u = this._ctx.createLinearGradient(r, i, s, o);
for (var a = 0, f = e.length; a < f; a++) u.addColorStop(n[a], e[a]);
return this._strokeInstructions = [ new t(this._setProp, [ "strokeStyle", u ], !1) ], this;
},
beginRadialGradientStroke: function(e, n, r, i, s, o, u, a) {
this._active && this._newPath();
var f = this._ctx.createRadialGradient(r, i, s, o, u, a);
for (var l = 0, c = e.length; l < c; l++) f.addColorStop(n[l], e[l]);
return this._strokeInstructions = [ new t(this._setProp, [ "strokeStyle", f ], !1) ], this;
},
beginBitmapStroke: function(e, n) {
this._active && this._newPath(), n = n || "";
var r = this._ctx.createPattern(e, n);
return this._strokeInstructions = [ new t(this._setProp, [ "strokeStyle", r ], !1) ], this;
},
endStroke: function() {
return this.beginStroke(), this;
},
drawRoundRect: function(e, t, n, r, i) {
return this.drawRoundRectComplex(e, t, n, r, i, i, i, i), this;
},
drawRoundRectComplex: function(e, n, r, i, s, o, u, a) {
var f = (r < i ? r : i) / 2, l = 0, c = 0, h = 0, p = 0;
s < 0 && (s *= l = -1), s > f && (s = f), o < 0 && (o *= c = -1), o > f && (o = f), u < 0 && (u *= h = -1), u > f && (u = f), a < 0 && (a *= p = -1), a > f && (a = f), this._dirty = this._active = !0;
var d = this._ctx.arcTo, v = this._ctx.lineTo;
return this._activeInstructions.push(new t(this._ctx.moveTo, [ e + r - o, n ]), new t(d, [ e + r + o * c, n - o * c, e + r, n + o, o ]), new t(v, [ e + r, n + i - u ]), new t(d, [ e + r + u * h, n + i + u * h, e + r - u, n + i, u ]), new t(v, [ e + a, n + i ]), new t(d, [ e - a * p, n + i + a * p, e, n + i - a, a ]), new t(v, [ e, n + s ]), new t(d, [ e - s * l, n - s * l, e + s, n, s ]), new t(this._ctx.closePath)), this;
},
drawCircle: function(e, t, n) {
return this.arc(e, t, n, 0, Math.PI * 2), this;
},
drawEllipse: function(e, n, r, i) {
this._dirty = this._active = !0;
var s = .5522848, o = r / 2 * s, u = i / 2 * s, a = e + r, f = n + i, l = e + r / 2, c = n + i / 2;
return this._activeInstructions.push(new t(this._ctx.moveTo, [ e, c ]), new t(this._ctx.bezierCurveTo, [ e, c - u, l - o, n, l, n ]), new t(this._ctx.bezierCurveTo, [ l + o, n, a, c - u, a, c ]), new t(this._ctx.bezierCurveTo, [ a, c + u, l + o, f, l, f ]), new t(this._ctx.bezierCurveTo, [ l - o, f, e, c + u, e, c ])), this;
},
drawPolyStar: function(e, n, r, i, s, o) {
this._dirty = this._active = !0, s == null && (s = 0), s = 1 - s, o == null ? o = 0 : o /= 180 / Math.PI;
var u = Math.PI / i;
this._activeInstructions.push(new t(this._ctx.moveTo, [ e + Math.cos(o) * r, n + Math.sin(o) * r ]));
for (var a = 0; a < i; a++) o += u, s != 1 && this._activeInstructions.push(new t(this._ctx.lineTo, [ e + Math.cos(o) * r * s, n + Math.sin(o) * r * s ])), o += u, this._activeInstructions.push(new t(this._ctx.lineTo, [ e + Math.cos(o) * r, n + Math.sin(o) * r ]));
return this;
},
decodePath: function(e) {
var t = [ this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath ], r = [ 2, 2, 4, 6, 0 ], i = 0, s = e.length, o = [], u = 0, a = 0, f = n.BASE_64;
while (i < s) {
var l = e.charAt(i), c = f[l], h = c >> 3, p = t[h];
if (!p || c & 3) throw "bad path data (@" + i + "): " + l;
var d = r[h];
h || (u = a = 0), o.length = 0, i++;
var v = (c >> 2 & 1) + 2;
for (var m = 0; m < d; m++) {
var g = f[e.charAt(i)], y = g >> 5 ? -1 : 1;
g = (g & 31) << 6 | f[e.charAt(i + 1)], v == 3 && (g = g << 6 | f[e.charAt(i + 2)]), g = y * g / 10, m % 2 ? u = g += u : a = g += a, o[m] = g, i += v;
}
p.apply(this, o);
}
return this;
},
clone: function() {
var e = new n;
return e._instructions = this._instructions.slice(), e._activeInstructions = this._activeInstructions.slice(), e._oldInstructions = this._oldInstructions.slice(), this._fillInstructions && (e._fillInstructions = this._fillInstructions.slice()), this._strokeInstructions && (e._strokeInstructions = this._strokeInstructions.slice()), this._strokeStyleInstructions && (e._strokeStyleInstructions = this._strokeStyleInstructions.slice()), e._active = this._active, e._dirty = this._dirty, e;
},
toString: function() {
return "[Graphics]";
},
_updateInstructions: function() {
this._instructions = this._oldInstructions.slice(), this._instructions.push(n.beginCmd), this._instructions.push.apply(this._instructions, this._activeInstructions), this._fillInstructions && this._instructions.push.apply(this._instructions, this._fillInstructions), this._strokeInstructions && (this._strokeStyleInstructions && this._instructions.push.apply(this._instructions, this._strokeStyleInstructions), this._instructions.push.apply(this._instructions, this._strokeInstructions), this._ignoreScaleStroke ? this._instructions.push(new t(this._ctx.save, [], !1), new t(this._ctx.setTransform, [ 1, 0, 0, 1, 0, 0 ], !1), n.strokeCmd, new t(this._ctx.restore, [], !1)) : this._instructions.push(n.strokeCmd));
},
_newPath: function() {
this._dirty && this._updateInstructions(), this._oldInstructions = this._instructions, this._activeInstructions = [], this._active = this._dirty = !1;
},
_setProp: function(e, t) {
this[e] = t;
}
});
n.getRGB = function(e, t, n, r) {
return e != null && n == null && (r = t, n = e & 255, t = e >> 8 & 255, e = e >> 16 & 255), r == null ? "rgb(" + e + "," + t + "," + n + ")" : "rgba(" + e + "," + t + "," + n + "," + r + ")";
}, n.getHSL = function(e, t, n, r) {
return r == null ? "hsl(" + e % 360 + "," + t + "%," + n + "%)" : "hsla(" + e % 360 + "," + t + "%," + n + "%," + r + ")";
}, n.BASE_64 = {
A: 0,
B: 1,
C: 2,
D: 3,
E: 4,
F: 5,
G: 6,
H: 7,
I: 8,
J: 9,
K: 10,
L: 11,
M: 12,
N: 13,
O: 14,
P: 15,
Q: 16,
R: 17,
S: 18,
T: 19,
U: 20,
V: 21,
W: 22,
X: 23,
Y: 24,
Z: 25,
a: 26,
b: 27,
c: 28,
d: 29,
e: 30,
f: 31,
g: 32,
h: 33,
i: 34,
j: 35,
k: 36,
l: 37,
m: 38,
n: 39,
o: 40,
p: 41,
q: 42,
r: 43,
s: 44,
t: 45,
u: 46,
v: 47,
w: 48,
x: 49,
y: 50,
z: 51,
"0": 52,
"1": 53,
"2": 54,
"3": 55,
"4": 56,
"5": 57,
"6": 58,
"7": 59,
"8": 60,
"9": 61,
"+": 62,
"/": 63
}, n.STROKE_CAPS_MAP = [ "butt", "round", "square" ], n.STROKE_JOINTS_MAP = [ "miter", "round", "bevel" ], n._ctx = document.createElement("canvas").getContext("2d"), n.beginCmd = new t(n._ctx.beginPath, [], !1), n.fillCmd = new t(n._ctx.fill, [], !1), n.strokeCmd = new t(n._ctx.stroke, [], !1);
var r = n.prototype;
return r.curveTo = r.quadraticCurveTo, r.drawRect = r.rect, r.mt = r.moveTo, r.lt = r.lineTo, r.at = r.arcTo, r.bt = r.bezierCurveTo, r.qt = r.quadraticCurveTo, r.a = r.arc, r.r = r.rect, r.cp = r.closePath, r.c = r.clear, r.f = r.beginFill, r.lf = r.beginLinearGradientFill, r.rf = r.beginRadialGradientFill, r.bf = r.beginBitmapFill, r.ef = r.endFill, r.ss = r.setStrokeStyle, r.s = r.beginStroke, r.ls = r.beginLinearGradientStroke, r.rs = r.beginRadialGradientStroke, r.bs = r.beginBitmapStroke, r.es = r.endStroke, r.dr = r.drawRect, r.rr = r.drawRoundRect, r.rc = r.drawRoundRectComplex, r.dc = r.drawCircle, r.de = r.drawEllipse, r.dp = r.drawPolyStar, r.p = r.decodePath, n;
});


// @source: ../src/lib/createjs/easeljs/display/MovieClip.js

xc.module.define("xc.createjs.MovieClip", function(e) {
var t = xc.module.require("xc.createjs.Container"), n = xc.module.require("xc.createjs.Timeline"), r = xc.module.require("xc.createjs.Tween"), i = xc.module.require("xc.createjs.DisplayObject"), s = t.extend({
initialize: function(e, t, r, i) {
this.mode = e || s.INDEPENDENT, this.startPosition = t || 0, this.loop = r, props = {
paused: !0,
position: t,
useTicks: !0
}, this._super(), this.timeline = new n(null, i, props), this._managed = {};
},
mode: null,
startPosition: 0,
loop: !0,
currentFrame: 0,
timeline: null,
paused: !1,
actionsEnabled: !0,
autoReset: !0,
_synchOffset: 0,
_prevPos: -1,
_prevPosition: 0,
_managed: null,
isVisible: function() {
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);
},
draw: function(e, t) {
this.dispObj = new i;
var n = this.dispObj.draw;
if (n.apply(this.dispObj, e, t)) return !0;
this._updateTimeline(), this._super(e, t);
},
play: function() {
this.paused = !1;
},
stop: function() {
this.paused = !0;
},
gotoAndPlay: function(e) {
this.paused = !1, this._goto(e);
},
gotoAndStop: function(e) {
this.paused = !0, this._goto(e);
},
clone: function() {
throw "MovieClip cannot be cloned.";
},
toString: function() {
return "[MovieClip (name=" + this.name + ")]";
},
_tick: function(e) {
!this.paused && this.mode == s.INDEPENDENT && (this._prevPosition = this._prevPos < 0 ? 0 : this._prevPosition + 1), this._super(e);
},
_goto: function(e) {
var t = this.timeline.resolve(e);
if (t == null) return;
this._prevPos == -1 && (this._prevPos = NaN), this._prevPosition = t, this._updateTimeline();
},
_reset: function() {
this._prevPos = -1, this.currentFrame = 0;
},
_updateTimeline: function() {
var e = this.timeline, t = e._tweens, n = this.children, o = this.mode != s.INDEPENDENT;
e.loop = this.loop == null ? !0 : this.loop, o ? e.setPosition(this.startPosition + (this.mode == s.SINGLE_FRAME ? 0 : this._synchOffset), r.NONE) : e.setPosition(this._prevPos < 0 ? 0 : this._prevPosition, this.actionsEnabled ? null : r.NONE), this._prevPosition = e._prevPosition;
if (this._prevPos == e._prevPos) return;
this.currentFrame = this._prevPos = e._prevPos;
for (var u in this._managed) this._managed[u] = 1;
for (var a = t.length - 1; a >= 0; a--) {
var f = t[a], l = f._target;
if (l == this) continue;
var c = f._stepPosition;
l instanceof i ? this._addManagedChild(l, c) : this._setState(l.state, c);
}
for (a = n.length - 1; a >= 0; a--) {
var h = n[a].id;
this._managed[h] == 1 && (this.removeChildAt(a), delete this._managed[h]);
}
},
_setState: function(e, t) {
if (!e) return;
for (var n = 0, r = e.length; n < r; n++) {
var i = e[n], s = i.t, o = i.p;
for (var u in o) s[u] = o[u];
this._addManagedChild(s, t);
}
},
_addManagedChild: function(e, t) {
if (e._off) return;
this.addChild(e), e instanceof s && (e._synchOffset = t, e.mode == s.INDEPENDENT && e.autoReset && !this._managed[e.id] && e._reset()), this._managed[e.id] = 2;
}
});
s.INDEPENDENT = "independent", s.SINGLE_FRAME = "single", s.SYNCHED = "synched";
var o = function() {
throw "MovieClipPlugin cannot be instantiated.";
};
return o.priority = 100, o.install = function() {
r.installPlugin(o, [ "startPosition" ]);
}, o.init = function(e, t, n) {
return n;
}, o.step = function() {}, o.tween = function(e, t, n, r, i, o, u, a) {
return e.target instanceof s ? o == 1 ? i[t] : r[t] : n;
}, o.install(), s;
});


// @source: ../src/lib/createjs/easeljs/display/Shadow.js

xc.module.define("xc.createjs.Shadow", function(e) {
var t = xc.class.create({
initialize: function(e, t, n, r) {
this.color = e, this.offsetX = t, this.offsetY = n, this.blur = r;
},
color: null,
offsetX: 0,
offsetY: 0,
blur: 0,
toString: function() {
return "[Shadow]";
},
clone: function() {
return new t(this.color, this.offsetX, this.offsetY, this.blur);
}
});
return t.identity = new t("transparent", 0, 0, 0), t;
});


// @source: ../src/lib/createjs/easeljs/display/Shape.js

xc.module.define("xc.createjs.Shape", function(e) {
var t = xc.module.require("xc.createjs.DisplayObject"), n = xc.module.require("xc.createjs.Graphics"), r = t.extend({
initialize: function(e) {
this._super(), this.graphics = e ? e : new n;
},
graphics: null,
isVisible: function() {
var e = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && e);
},
draw: function(e, t) {
return this._super(e, t) ? !0 : (this.graphics.draw(e), !0);
},
clone: function(e) {
var t = new r(e && this.graphics ? this.graphics.clone() : this.graphics);
return this.cloneProps(t), t;
},
toString: function() {
return "[Shape (name=" + this.name + ")]";
}
});
return r;
});


// @source: ../src/lib/createjs/easeljs/display/SpriteSheet.js

xc.module.define("xc.createjs.SpriteSheet", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = xc.module.require("xc.createjs.Rectangle"), r = t.extend({
initialize: function(e) {
var t, r, i, s;
if (e == null) return;
if (e.images && (r = e.images.length) > 0) {
s = this._images = [];
for (t = 0; t < r; t++) {
var o = e.images[t];
if (typeof o == "string") {
var u = o;
o = new Image, o.src = u;
}
s.push(o), !o.getContext && !o.complete && (this._loadCount++, this.complete = !1, function(e) {
o.onload = function() {
e._handleImageLoad();
};
}(this));
}
}
if (e.frames != null) if (e.frames instanceof Array) {
this._frames = [], s = e.frames;
for (t = 0, r = s.length; t < r; t++) {
var a = s[t];
this._frames.push({
image: this._images[a[4] ? a[4] : 0],
rect: new n(a[0], a[1], a[2], a[3]),
regX: a[5] || 0,
regY: a[6] || 0
});
}
} else i = e.frames, this._frameWidth = i.width, this._frameHeight = i.height, this._regX = i.regX || 0, this._regY = i.regY || 0, this._numFrames = i.count, this._loadCount == 0 && this._calculateFrames();
if ((i = e.animations) != null) {
this._animations = [], this._data = {};
var f;
for (f in i) {
var l = {
name: f
}, c = i[f];
if (typeof c == "number") s = l.frames = [ c ]; else if (c instanceof Array) if (c.length == 1) l.frames = [ c[0] ]; else {
l.frequency = c[3], l.next = c[2], s = l.frames = [];
for (t = c[0]; t <= c[1]; t++) s.push(t);
} else {
l.frequency = c.frequency, l.next = c.next;
var h = c.frames;
s = l.frames = typeof h == "number" ? [ h ] : h.slice(0);
}
l.next = s.length < 2 || l.next == 0 ? null : l.next == null || l.next == 1 ? f : l.next, l.frequency || (l.frequency = 1), this._animations.push(f), this._data[f] = l;
}
}
},
complete: !0,
_animations: null,
_frames: null,
_images: null,
_data: null,
_loadCount: 0,
_frameHeight: 0,
_frameWidth: 0,
_numFrames: 0,
_regX: 0,
_regY: 0,
getNumFrames: function(e) {
if (e == null) return this._frames ? this._frames.length : this._numFrames;
var t = this._data[e];
return t == null ? 0 : t.frames.length;
},
getAnimations: function() {
return this._animations.slice(0);
},
getAnimation: function(e) {
return this._data[e];
},
getFrame: function(e) {
var t;
return this.complete && this._frames && (t = this._frames[e]) ? t : null;
},
getFrameBounds: function(e) {
var t = this.getFrame(e);
return t ? new n(-t.regX, -t.regY, t.rect.width, t.rect.height) : null;
},
toString: function() {
return "[SpriteSheet]";
},
clone: function() {
var e = new r;
return e.complete = this.complete, e._animations = this._animations, e._frames = this._frames, e._images = this._images, e._data = this._data, e._frameHeight = this._frameHeight, e._frameWidth = this._frameWidth, e._numFrames = this._numFrames, e._loadCount = this._loadCount, e;
},
_handleImageLoad: function() {
--this._loadCount == 0 && (this._calculateFrames(), this.complete = !0, this.dispatchEvent("complete"));
},
_calculateFrames: function() {
if (this._frames || this._frameWidth == 0) return;
this._frames = [];
var e = 0, t = this._frameWidth, r = this._frameHeight;
for (var i = 0, s = this._images; i < s.length; i++) {
var o = s[i], u = (o.width + 1) / t | 0, a = (o.height + 1) / r | 0, f = this._numFrames > 0 ? Math.min(this._numFrames - e, u * a) : u * a;
for (var l = 0; l < f; l++) this._frames.push({
image: o,
rect: new n(l % u * t, (l / u | 0) * r, t, r),
regX: this._regX,
regY: this._regY
});
e += f;
}
this._numFrames = e;
}
});
return r;
});


// @source: ../src/lib/createjs/easeljs/display/Stage.js

xc.module.define("xc.createjs.Stage", function(e) {
var t = xc.module.require("xc.createjs.Container"), n = xc.module.require("xc.createjs.MouseEvent"), r = t.extend({
initialize: function(e) {
this._super(), this.canvas = typeof e == "string" ? document.getElementById(e) : e, this._pointerData = {}, this.enableDOMEvents(!0), this.tick = this.update;
},
autoClear: !0,
canvas: null,
mouseX: 0,
mouseY: 0,
mouseInBounds: !1,
tickOnUpdate: !0,
mouseMoveOutside: !1,
_pointerData: null,
_pointerCount: 0,
_primaryPointerID: null,
_mouseOverIntervalID: null,
update: function() {
if (!this.canvas) return;
this.autoClear && this.clear(), this.tickOnUpdate && this._tick(arguments.length ? arguments : null);
var e = this.canvas.getContext("2d");
e.save(), this.updateContext(e), this.draw(e, !1), e.restore();
},
handleEvent: function(e) {
e.type == "tick" && this.update(e);
},
clear: function() {
if (!this.canvas) return;
var e = this.canvas.getContext("2d");
e.setTransform(1, 0, 0, 1, 0, 0), e.clearRect(0, 0, this.canvas.width, this.canvas.height);
},
toDataURL: function(e, t) {
t || (t = "image/png");
var n = this.canvas.getContext("2d"), r = this.canvas.width, i = this.canvas.height, s;
if (e) {
s = n.getImageData(0, 0, r, i);
var o = n.globalCompositeOperation;
n.globalCompositeOperation = "destination-over", n.fillStyle = e, n.fillRect(0, 0, r, i);
}
var u = this.canvas.toDataURL(t);
return e && (n.clearRect(0, 0, r, i), n.putImageData(s, 0, 0), n.globalCompositeOperation = o), u;
},
enableMouseOver: function(e) {
this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID), this._mouseOverIntervalID = null);
if (e == null) e = 20; else if (e <= 0) return;
var t = this;
this._mouseOverIntervalID = setInterval(function() {
t._testMouseOver(), t._testTouchOver();
}, 1e3 / Math.min(1e3, e));
},
enableDOMEvents: function(e) {
e == null && (e = !0);
var t, n, r = this._eventListeners;
if (!e && r) {
for (t in r) n = r[t], n.t.removeEventListener(t, n.f);
this._eventListeners = null;
} else if (e && !r) {
var i = window.addEventListener ? window : document, s = this;
r = this._eventListeners = {}, r.mouseup = {
t: i,
f: function(e) {
s._handleMouseUp(e);
}
}, r.mousemove = {
t: i,
f: function(e) {
s._handleMouseMove(e);
}
}, r.dblclick = {
t: i,
f: function(e) {
s._handleDoubleClick(e);
}
}, i = this.canvas, i && (r.mousedown = {
t: i,
f: function(e) {
s._handleMouseDown(e);
}
});
for (t in r) n = r[t], n.t.addEventListener(t, n.f);
}
},
clone: function() {
var e = new r(null);
return this.cloneProps(e), e;
},
toString: function() {
return "[Stage (name=" + this.name + ")]";
},
_getPointerData: function(e) {
var t = this._pointerData[e];
return t || (t = this._pointerData[e] = {
x: 0,
y: 0
}, this._primaryPointerID == null && (this._primaryPointerID = e)), t;
},
_handleMouseMove: function(e) {
e || (e = window.event), this._handlePointerMove(-1, e, e.pageX, e.pageY);
},
_handlePointerMove: function(e, t, r, i) {
if (!this.canvas) return;
var s, o = this._getPointerData(e), u = o.inBounds;
this._updatePointerPosition(e, r, i);
if (!u && !o.inBounds && !this.mouseMoveOutside) return;
this.hasEventListener("stagemousemove") && (s = new n("stagemousemove", o.x, o.y, this, t, e, e == this._primaryPointerID, o.rawX, o.rawY), this.dispatchEvent(s));
var a = o.event;
a && a.hasEventListener("mousemove") && (s = new n("mousemove", o.x, o.y, a.target, t, e, e == this._primaryPointerID, o.rawX, o.rawY), a.dispatchEvent(s, a.target));
},
_updatePointerPosition: function(e, t, n) {
var r = this._getElementRect(this.canvas);
t -= r.left, n -= r.top;
var i = this.canvas.width, s = this.canvas.height;
t /= (r.right - r.left) / i, n /= (r.bottom - r.top) / s;
var o = this._getPointerData(e);
(o.inBounds = t >= 0 && n >= 0 && t <= i - 1 && n <= s - 1) ? (o.x = t, o.y = n) : this.mouseMoveOutside && (o.x = t < 0 ? 0 : t > i - 1 ? i - 1 : t, o.y = n < 0 ? 0 : n > s - 1 ? s - 1 : n), o.rawX = t, o.rawY = n, e == this._primaryPointerID && (this.mouseX = o.x, this.mouseY = o.y, this.mouseInBounds = o.inBounds), this.touchs[e] = {
id: e,
x: o.x,
y: o.y,
inBounds: o.inBounds
};
},
_getElementRect: function(e) {
var t;
try {
t = e.getBoundingClientRect();
} catch (n) {
t = {
top: e.offsetTop,
left: e.offsetLeft,
width: e.offsetWidth,
height: e.offsetHeight
};
}
var r = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0), i = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0), s = window.getComputedStyle ? getComputedStyle(e) : e.currentStyle, o = parseInt(s.paddingLeft) + parseInt(s.borderLeftWidth), u = parseInt(s.paddingTop) + parseInt(s.borderTopWidth), a = parseInt(s.paddingRight) + parseInt(s.borderRightWidth), f = parseInt(s.paddingBottom) + parseInt(s.borderBottomWidth);
return {
left: t.left + r + o,
right: t.right + r - a,
top: t.top + i + u,
bottom: t.bottom + i - f
};
},
_handleMouseUp: function(e) {
this._handlePointerUp(-1, e, !1);
},
_handlePointerUp: function(e, t, r) {
var i = this._getPointerData(e), s;
this.hasEventListener("stagemouseup") && (s = new n("stagemouseup", i.x, i.y, this, t, e, e == this._primaryPointerID, i.rawX, i.rawY), this.dispatchEvent(s));
var o = i.event;
o && o.hasEventListener("mouseup") && (s = new n("mouseup", i.x, i.y, o.target, t, e, e == this._primaryPointerID, i.rawX, i.rawY), o.dispatchEvent(s, o.target));
var u = i.target;
u && u.hasEventListener("click") && this._getObjectsUnderPoint(i.x, i.y, null, true, this._mouseOverIntervalID ? 3 : 1) == u && (s = new n("click", i.x, i.y, u, t, e, e == this._primaryPointerID, i.rawX, i.rawY), u.dispatchEvent(s)), r ? (e == this._primaryPointerID && (this._primaryPointerID = null), delete this._pointerData[e]) : i.event = i.target = null;
},
_handleMouseDown: function(e) {
this._handlePointerDown(-1, e, !1);
},
_handlePointerDown: function(e, t, r, i) {
var s = this._getPointerData(e);
i != null && this._updatePointerPosition(e, r, i);
if (this.hasEventListener("stagemousedown")) {
var o = new n("stagemousedown", s.x, s.y, this, t, e, e == this._primaryPointerID, s.rawX, s.rawY);
this.dispatchEvent(o);
}
var u = this._getObjectsUnderPoint(s.x, s.y, null, this._mouseOverIntervalID ? 3 : 1);
if (u) {
s.target = u;
if (u.hasEventListener("mousedown")) {
o = new n("mousedown", s.x, s.y, u, t, e, e == this._primaryPointerID, s.rawX, s.rawY), u.dispatchEvent(o);
if (o.hasEventListener("mousemove") || o.hasEventListener("mouseup")) s.event = o;
}
}
},
_testMouseOver: function() {
if (this._primaryPointerID != -1) return;
if (this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds) return;
var e = null;
this.mouseInBounds && (e = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, 3), this._mouseOverX = this.mouseX, this._mouseOverY = this.mouseY);
var t = this._mouseOverTarget;
if (t != e) {
var r = this._getPointerData(-1);
if (t && t.hasEventListener("mouseout")) {
var i = new n("mouseout", r.x, r.y, t, null, -1, r.rawX, r.rawY);
t.dispatchEvent(i);
}
t && (this.canvas.style.cursor = ""), e && e.hasEventListener("mouseover") && (i = new n("mouseover", r.x, r.y, e, null, -1, r.rawX, r.rawY), e.dispatchEvent(i)), e && (this.canvas.style.cursor = e.cursor || ""), this._mouseOverTarget = e;
}
},
touchs: {},
_touchOver: {},
mouseOverTargets: {},
_testTouchOver: function() {
for (var e in this.touchs) {
if (e == -1) continue;
var t = this.touchs[e], n = this._touchOver[e];
if (t && n && n.x == t.x && n.y == t.y && t.inBounds) continue;
var r = null;
t.inBounds && (r = this._getObjectsUnderPoint(t.x, t.y, null, 3), this._touchOver[e] = {
x: t.x,
y: t.y
});
var i = this.mouseOverTargets[e];
if (i != r) {
var s = this._getPointerData(e);
if (i && (i.onMouseOut || i.hasEventListener("mouseout"))) {
var o = new createjs.MouseEvent("mouseout", s.x, s.y, i, null, -1, s.rawX, s.rawY);
i.onMouseOut && i.onMouseOut(o), i.dispatchEvent(o), this.touchs[e] = undefined;
}
i && (this.canvas.style.cursor = ""), r && (r.onMouseOver || r.hasEventListener("mouseover")) && (o = new createjs.MouseEvent("mouseover", s.x, s.y, r, null, -1, s.rawX, s.rawY), r.onMouseOver && r.onMouseOver(o), r.dispatchEvent(o)), r && (this.canvas.style.cursor = r.cursor || ""), this.mouseOverTargets[e] = r;
}
}
},
_handleDoubleClick: function(e) {
var t = this._getPointerData(-1), r = this._getObjectsUnderPoint(t.x, t.y, null, this._mouseOverIntervalID ? 3 : 1);
r && r.hasEventListener("dblclick") && (evt = new n("dblclick", t.x, t.y, r, e, -1, !0, t.rawX, t.rawY), r.dispatchEvent(evt));
}
});
return r;
});


// @source: ../src/lib/createjs/easeljs/display/Text.js

xc.module.define("xc.createjs.Text", function(e) {
var t = xc.module.require("xc.createjs.DisplayObject"), n = t.extend({
initialize: function(e, t, n) {
this._super(), this.text = e, this.font = t, this.color = n ? n : "#000";
},
text: "",
font: null,
color: "#000",
textAlign: "left",
textBaseline: "top",
maxWidth: null,
outline: !1,
lineHeight: 0,
lineWidth: null,
isVisible: function() {
var e = this.cacheCanvas || this.text != null && this.text !== "";
return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && e);
},
draw: function(e, t) {
return this._super(e, t) ? !0 : (this.outline ? e.strokeStyle = this.color : e.fillStyle = this.color, e.font = this.font, e.textAlign = this.textAlign || "start", e.textBaseline = this.textBaseline || "alphabetic", this._drawText(e), !0);
},
getMeasuredWidth: function() {
return this._getWorkingContext().measureText(this.text).width;
},
getMeasuredLineHeight: function() {
return this._getWorkingContext().measureText("M").width * 1.2;
},
getMeasuredHeight: function() {
return this._drawText() * (this.lineHeight || this.getMeasuredLineHeight());
},
clone: function() {
var e = new n(this.text, this.font, this.color);
return this.cloneProps(e), e;
},
toString: function() {
return "[Text (text=" + (this.text.length > 20 ? this.text.substr(0, 17) + "..." : this.text) + ")]";
},
cloneProps: function(e) {
this._super(e), e.textAlign = this.textAlign, e.textBaseline = this.textBaseline, e.maxWidth = this.maxWidth, e.outline = this.outline, e.lineHeight = this.lineHeight, e.lineWidth = this.lineWidth;
},
_getWorkingContext: function() {
var e = n._workingContext;
return e.font = this.font, e.textAlign = this.textAlign || "start", e.textBaseline = this.textBaseline || "alphabetic", e;
},
_drawText: function(e) {
var t = !!e;
t || (e = this._getWorkingContext());
var n = String(this.text).split(/(?:\r\n|\r|\n)/), r = this.lineHeight || this.getMeasuredLineHeight(), i = 0;
for (var s = 0, o = n.length; s < o; s++) {
var u = e.measureText(n[s]).width;
if (this.lineWidth == null || u < this.lineWidth) {
t && this._drawTextLine(e, n[s], i * r), i++;
continue;
}
var a = n[s].split(/(\s)/), f = a[0];
for (var l = 1, c = a.length; l < c; l += 2) e.measureText(f + a[l] + a[l + 1]).width > this.lineWidth ? (t && this._drawTextLine(e, f, i * r), i++, f = a[l + 1]) : f += a[l] + a[l + 1];
t && this._drawTextLine(e, f, i * r), i++;
}
return i;
},
_drawTextLine: function(e, t, n) {
this.outline ? e.strokeText(t, 0, n, this.maxWidth || 65535) : e.fillText(t, 0, n, this.maxWidth || 65535);
}
});
return n._workingContext = document.createElement("canvas").getContext("2d"), n;
});


// @source: ../src/lib/createjs/easeljs/events/EventDispatcher.js

xc.module.define("xc.createjs.EventDispatcher", function(e) {
var t = xc.class.create({
_listeners: null,
addEventListener: function(e, t) {
var n = this._listeners;
n ? this.removeEventListener(e, t) : n = this._listeners = {};
var r = n[e];
return r || (r = n[e] = []), r.push(t), t;
},
removeEventListener: function(e, t) {
var n = this._listeners;
if (!n) return;
var r = n[e];
if (!r) return;
for (var i = 0, s = r.length; i < s; i++) if (r[i] == t) {
s == 1 ? delete n[e] : r.splice(i, 1);
break;
}
},
removeAllEventListeners: function(e) {
e ? this._listeners && delete this._listeners[e] : this._listeners = null;
},
dispatchEvent: function(e, t) {
var n = !1, r = this._listeners;
if (e && r) {
typeof e == "string" && (e = {
type: e
}), e.target = t || this;
var i = r[e.type];
if (!i) return n;
i = i.slice();
for (var s = 0, o = i.length; s < o; s++) {
var u = i[s];
u instanceof Function ? n = n || u.apply(null, [ e ]) : u.handleEvent && (n = n || u.handleEvent(e));
}
}
return !!n;
},
hasEventListener: function(e) {
var t = this._listeners;
return !!t && !!t[e];
},
toString: function() {
return "[EventDispatcher]";
}
});
return t.initialize = function(e) {
var n = t.prototype;
e.addEventListener = n.addEventListener, e.removeEventListener = n.removeEventListener, e.removeAllEventListeners = n.removeAllEventListeners, e.hasEventListener = n.hasEventListener, e.dispatchEvent = n.dispatchEvent;
}, t;
});


// @source: ../src/lib/createjs/easeljs/events/MouseEvent.js

xc.module.define("xc.createjs.MouseEvent", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = t.extend({
initialize: function(e, t, n, r, i, s, o, u, a) {
this.type = e, this.stageX = t, this.stageY = n, this.target = r, this.nativeEvent = i, this.pointerID = s, this.primary = o, this.rawX = u == null ? t : u, this.rawY = a == null ? n : a;
},
stageX: 0,
stageY: 0,
rawX: 0,
rawY: 0,
type: null,
nativeEvent: null,
target: null,
pointerID: 0,
primary: !1,
clone: function() {
return new n(this.type, this.stageX, this.stageY, this.target, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);
},
toString: function() {
return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]";
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/filters/AlphaMapFilter.js

xc.module.define("xc.createjs.AlphaMapFilter", function(e) {
var t = xc.module.require("xc.createjs.Filter"), n = t.extend({
initialize: function(e) {
this.alphaMap = e;
},
alphaMap: null,
_alphaMap: null,
_mapData: null,
applyFilter: function(e, t, n, r, i, s, o, u) {
if (!this.alphaMap) return !0;
if (!this._prepAlphaMap()) return !1;
s = s || e, o == null && (o = t), u == null && (u = n);
try {
var a = e.getImageData(t, n, r, i);
} catch (f) {
return !1;
}
var l = a.data, c = this._mapData, h = l.length;
for (var p = 0; p < h; p += 4) l[p + 3] = c[p] || 0;
return a.data = l, s.putImageData(a, o, u), !0;
},
clone: function() {
return new n(this.mask);
},
toString: function() {
return "[AlphaMapFilter]";
},
_prepAlphaMap: function() {
if (!this.alphaMap) return !1;
if (this.alphaMap == this._alphaMap && this._mapData) return !0;
this._mapData = null;
var e = this._alphaMap = this.alphaMap, t = e;
e instanceof HTMLCanvasElement ? ctx = t.getContext("2d") : (t = document.createElement("canvas"), t.width = e.width, t.height = e.height, ctx = t.getContext("2d"), ctx.drawImage(e, 0, 0));
try {
var n = ctx.getImageData(0, 0, e.width, e.height);
} catch (r) {
return !1;
}
return this._mapData = n.data, !0;
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/filters/AlphaMaskFilter.js

xc.module.define("xc.createjs.AlphaMaskFilter", function(e) {
var t = xc.module.require("xc.createjs.Filter"), n = t.extend({
initialize: function(e) {
this.mask = e;
},
mask: null,
applyFilter: function(e, t, n, r, i, s, o, u) {
return this.mask ? (s = s || e, o == null && (o = t), u == null && (u = n), s.save(), e != s, s.globalCompositeOperation = "destination-in", s.drawImage(this.mask, o, u), s.restore(), !0) : !0;
},
clone: function() {
return new n(this.mask);
},
toString: function() {
return "[AlphaMaskFilter]";
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/filters/BoxBlurFilter.js

xc.module.define("xc.createjs.BoxBlurFilter", function(e) {
var t = xc.module.require("xc.createjs.Rectangle"), n = xc.module.require("xc.createjs.Filter"), r = n.extend({
initialize: function(e, t, n) {
if (isNaN(e) || e < 0) e = 0;
this.blurX = e | 0;
if (isNaN(t) || t < 0) t = 0;
this.blurY = t | 0;
if (isNaN(n) || n < 1) n = 1;
this.quality = n | 0;
},
blurX: 0,
blurY: 0,
quality: 1,
getBounds: function() {
return new t(-this.blurX, -this.blurY, 2 * this.blurX, 2 * this.blurY);
},
applyFilter: function(e, t, n, r, i, s, o, u) {
s = s || e, o == null && (o = t), u == null && (u = n);
try {
var a = e.getImageData(t, n, r, i);
} catch (f) {
return !1;
}
var l = this.blurX;
if (isNaN(l) || l < 0) return !1;
l |= 0;
var c = this.blurY;
if (isNaN(c) || c < 0) return !1;
c |= 0;
if (l == 0 && c == 0) return !1;
var h = this.quality;
if (isNaN(h) || h < 1) h = 1;
h |= 0, h > 3 && (h = 3), h < 1 && (h = 1);
var p = a.data, d, v, m, g, t, n, y, b, w, E, S, x, T, N = r - 1, C = i - 1, k = l + 1, L = l + k, A = c + 1, O = c + A, M = 1 / (L * O), _ = [], D = [], P = [], H = [], B = [], j = [];
while (h-- > 0) {
T = x = 0;
for (n = 0; n < i; n++) {
d = p[T] * k, v = p[T + 1] * k, m = p[T + 2] * k, g = p[T + 3] * k;
for (y = 1; y <= l; y++) b = T + ((y > N ? N : y) << 2), d += p[b++], v += p[b++], m += p[b++], g += p[b];
for (t = 0; t < r; t++) _[x] = d, D[x] = v, P[x] = m, H[x] = g, n == 0 && (B[t] = Math.min(t + k, N) << 2, j[t] = Math.max(t - l, 0) << 2), w = T + B[t], E = T + j[t], d += p[w++] - p[E++], v += p[w++] - p[E++], m += p[w++] - p[E++], g += p[w] - p[E], x++;
T += r << 2;
}
for (t = 0; t < r; t++) {
S = t, d = _[S] * A, v = D[S] * A, m = P[S] * A, g = H[S] * A;
for (y = 1; y <= c; y++) S += y > C ? 0 : r, d += _[S], v += D[S], m += P[S], g += H[S];
x = t << 2;
for (n = 0; n < i; n++) p[x] = d * M + .5 | 0, p[x + 1] = v * M + .5 | 0, p[x + 2] = m * M + .5 | 0, p[x + 3] = g * M + .5 | 0, t == 0 && (B[n] = Math.min(n + A, C) * r, j[n] = Math.max(n - c, 0) * r), w = t + B[n], E = t + j[n], d += _[w] - _[E], v += D[w] - D[E], m += P[w] - P[E], g += H[w] - H[E], x += r << 2;
}
}
return s.putImageData(a, o, u), !0;
},
clone: function() {
return new r(this.blurX, this.blurY, this.quality);
},
toString: function() {
return "[BoxBlurFilter]";
}
});
return r;
});


// @source: ../src/lib/createjs/easeljs/filters/ColorFilter.js

xc.module.define("xc.createjs.ColorFilter", function(e) {
var t = xc.module.require("xc.createjs.Filter"), n = t.extend({
initialize: function(e, t, n, r, i, s, o, u) {
this.redMultiplier = e != null ? e : 1, this.greenMultiplier = t != null ? t : 1, this.blueMultiplier = n != null ? n : 1, this.alphaMultiplier = r != null ? r : 1, this.redOffset = i || 0, this.greenOffset = s || 0, this.blueOffset = o || 0, this.alphaOffset = u || 0;
},
redMultiplier: 1,
greenMultiplier: 1,
blueMultiplier: 1,
alphaMultiplier: 1,
redOffset: 0,
greenOffset: 0,
blueOffset: 0,
alphaOffset: 0,
applyFilter: function(e, t, n, r, i, s, o, u) {
s = s || e, o == null && (o = t), u == null && (u = n);
try {
var a = e.getImageData(t, n, r, i);
} catch (f) {
return !1;
}
var l = a.data, c = l.length;
for (var h = 0; h < c; h += 4) l[h] = l[h] * this.redMultiplier + this.redOffset, l[h + 1] = l[h + 1] * this.greenMultiplier + this.greenOffset, l[h + 2] = l[h + 2] * this.blueMultiplier + this.blueOffset, l[h + 3] = l[h + 3] * this.alphaMultiplier + this.alphaOffset;
return a.data = l, s.putImageData(a, o, u), !0;
},
toString: function() {
return "[ColorFilter]";
},
clone: function() {
return new n(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/filters/ColorMatrix.js

xc.module.define("xc.createjs.ColorMatrix", function(e) {
var t = xc.class.create({
initialize: function(e, t, n, r) {
return this.reset(), this.adjustColor(e, t, n, r), this;
},
reset: function() {
return this.copyMatrix(t.IDENTITY_MATRIX);
},
adjustColor: function(e, t, n, r) {
return this.adjustHue(r), this.adjustContrast(t), this.adjustBrightness(e), this.adjustSaturation(n);
},
adjustBrightness: function(e) {
return e == 0 || isNaN(e) ? this : (e = this._cleanValue(e, 255), this._multiplyMatrix([ 1, 0, 0, 0, e, 0, 1, 0, 0, e, 0, 0, 1, 0, e, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]), this);
},
adjustContrast: function(e) {
if (e == 0 || isNaN(e)) return this;
e = this._cleanValue(e, 100);
var n;
return e < 0 ? n = 127 + e / 100 * 127 : (n = e % 1, n == 0 ? n = t.DELTA_INDEX[e] : n = t.DELTA_INDEX[e << 0] * (1 - n) + t.DELTA_INDEX[(e << 0) + 1] * n, n = n * 127 + 127), this._multiplyMatrix([ n / 127, 0, 0, 0, .5 * (127 - n), 0, n / 127, 0, 0, .5 * (127 - n), 0, 0, n / 127, 0, .5 * (127 - n), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]), this;
},
adjustSaturation: function(e) {
if (e == 0 || isNaN(e)) return this;
e = this._cleanValue(e, 100);
var t = 1 + (e > 0 ? 3 * e / 100 : e / 100), n = .3086, r = .6094, i = .082;
return this._multiplyMatrix([ n * (1 - t) + t, r * (1 - t), i * (1 - t), 0, 0, n * (1 - t), r * (1 - t) + t, i * (1 - t), 0, 0, n * (1 - t), r * (1 - t), i * (1 - t) + t, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]), this;
},
adjustHue: function(e) {
if (e == 0 || isNaN(e)) return this;
e = this._cleanValue(e, 180) / 180 * Math.PI;
var t = Math.cos(e), n = Math.sin(e), r = .213, i = .715, s = .072;
return this._multiplyMatrix([ r + t * (1 - r) + n * -r, i + t * -i + n * -i, s + t * -s + n * (1 - s), 0, 0, r + t * -r + n * .143, i + t * (1 - i) + n * .14, s + t * -s + n * -0.283, 0, 0, r + t * -r + n * -(1 - r), i + t * -i + n * i, s + t * (1 - s) + n * s, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]), this;
},
concat: function(e) {
return e = this._fixMatrix(e), e.length != t.LENGTH ? this : (this._multiplyMatrix(e), this);
},
clone: function() {
return new t(this);
},
toArray: function() {
return this.slice(0, t.LENGTH);
},
copyMatrix: function(e) {
var n = t.LENGTH;
for (var r = 0; r < n; r++) this[r] = e[r];
return this;
},
_multiplyMatrix: function(e) {
var t = [];
for (var n = 0; n < 5; n++) {
for (var r = 0; r < 5; r++) t[r] = this[r + n * 5];
for (var r = 0; r < 5; r++) {
var i = 0;
for (var s = 0; s < 5; s++) i += e[r + s * 5] * t[s];
this[r + n * 5] = i;
}
}
},
_cleanValue: function(e, t) {
return Math.min(t, Math.max(-t, e));
},
_fixMatrix: function(e) {
return e instanceof t && (e = e.slice(0)), e.length < t.LENGTH ? e = e.slice(0, e.length).concat(t.IDENTITY_MATRIX.slice(e.length, t.LENGTH)) : e.length > t.LENGTH && (e = e.slice(0, t.LENGTH)), e;
}
});
return t.DELTA_INDEX = [ 0, .01, .02, .04, .05, .06, .07, .08, .1, .11, .12, .14, .15, .16, .17, .18, .2, .21, .22, .24, .25, .27, .28, .3, .32, .34, .36, .38, .4, .42, .44, .46, .48, .5, .53, .56, .59, .62, .65, .68, .71, .74, .77, .8, .83, .86, .89, .92, .95, .98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10 ], t.IDENTITY_MATRIX = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 ], t.LENGTH = t.IDENTITY_MATRIX.length, t;
});


// @source: ../src/lib/createjs/easeljs/filters/ColorMatrixFilter.js

xc.module.define("xc.createjs.ColorMatrixFilter", function(e) {
var t = xc.module.require("xc.createjs.Filter"), n = t.extend({
initialize: function(e) {
this.matrix = e;
},
matrix: null,
applyFilter: function(e, t, n, r, i, s, o, u) {
s = s || e, o == null && (o = t), u == null && (u = n);
try {
var a = e.getImageData(t, n, r, i);
} catch (f) {
return !1;
}
var l = a.data, c = l.length, h, p, d, v, m = this.matrix, g = m[0], y = m[1], b = m[2], w = m[3], E = m[4], S = m[5], x = m[6], T = m[7], N = m[8], C = m[9], k = m[10], L = m[11], A = m[12], O = m[13], M = m[14], _ = m[15], D = m[16], P = m[17], H = m[18], B = m[19];
for (var j = 0; j < c; j += 4) h = l[j], p = l[j + 1], d = l[j + 2], v = l[j + 3], l[j] = h * g + p * y + d * b + v * w + E, l[j + 1] = h * S + p * x + d * T + v * N + C, l[j + 2] = h * k + p * L + d * A + v * O + M, l[j + 3] = h * _ + p * D + d * P + v * H + B;
return a.data = l, s.putImageData(a, o, u), !0;
},
toString: function() {
return "[ColorMatrixFilter]";
},
clone: function() {
return new n(this.matrix);
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/filters/Filter.js

xc.module.define("xc.createjs.Filter", function(e) {
var t = xc.module.require("xc.createjs.Rectangle"), n = xc.class.create({
getBounds: function() {
return new t(0, 0, 0, 0);
},
applyFilter: function(e, t, n, r, i, s, o, u) {},
toString: function() {
return "[Filter]";
},
clone: function() {
return new n;
}
});
return n;
});


// @source: ../src/lib/createjs/easeljs/geom/Matrix2D.js

xc.module.define("xc.createjs.Matrix2D", function(e) {
var t = xc.class.create({
initialize: function(e, t, n, r, i, s) {
return e != null && (this.a = e), this.b = t || 0, this.c = n || 0, r != null && (this.d = r), this.tx = i || 0, this.ty = s || 0, this;
},
a: 1,
b: 0,
c: 0,
d: 1,
tx: 0,
ty: 0,
alpha: 1,
shadow: null,
compositeOperation: null,
prepend: function(e, t, n, r, i, s) {
var o = this.tx;
if (e != 1 || t != 0 || n != 0 || r != 1) {
var u = this.a, a = this.c;
this.a = u * e + this.b * n, this.b = u * t + this.b * r, this.c = a * e + this.d * n, this.d = a * t + this.d * r;
}
return this.tx = o * e + this.ty * n + i, this.ty = o * t + this.ty * r + s, this;
},
append: function(e, t, n, r, i, s) {
var o = this.a, u = this.b, a = this.c, f = this.d;
return this.a = e * o + t * a, this.b = e * u + t * f, this.c = n * o + r * a, this.d = n * u + r * f, this.tx = i * o + s * a + this.tx, this.ty = i * u + s * f + this.ty, this;
},
prependMatrix: function(e) {
return this.prepend(e.a, e.b, e.c, e.d, e.tx, e.ty), this.prependProperties(e.alpha, e.shadow, e.compositeOperation), this;
},
appendMatrix: function(e) {
return this.append(e.a, e.b, e.c, e.d, e.tx, e.ty), this.appendProperties(e.alpha, e.shadow, e.compositeOperation), this;
},
prependTransform: function(e, n, r, i, s, o, u, a, f) {
if (s % 360) var l = s * t.DEG_TO_RAD, c = Math.cos(l), h = Math.sin(l); else c = 1, h = 0;
if (a || f) this.tx -= a, this.ty -= f;
return o || u ? (o *= t.DEG_TO_RAD, u *= t.DEG_TO_RAD, this.prepend(c * r, h * r, -h * i, c * i, 0, 0), this.prepend(Math.cos(u), Math.sin(u), -Math.sin(o), Math.cos(o), e, n)) : this.prepend(c * r, h * r, -h * i, c * i, e, n), this;
},
appendTransform: function(e, n, r, i, s, o, u, a, f) {
if (s % 360) var l = s * t.DEG_TO_RAD, c = Math.cos(l), h = Math.sin(l); else c = 1, h = 0;
o || u ? (o *= t.DEG_TO_RAD, u *= t.DEG_TO_RAD, this.append(Math.cos(u), Math.sin(u), -Math.sin(o), Math.cos(o), e, n), this.append(c * r, h * r, -h * i, c * i, 0, 0)) : this.append(c * r, h * r, -h * i, c * i, e, n);
if (a || f) this.tx -= a * this.a + f * this.c, this.ty -= a * this.b + f * this.d;
return this;
},
rotate: function(e) {
var t = Math.cos(e), n = Math.sin(e), r = this.c, i = this.tx;
return this.a = a1 * t - this.b * n, this.b = a1 * n + this.b * t, this.c = r * t - this.d * n, this.d = r * n + this.d * t, this.tx = i * t - this.ty * n, this.ty = i * n + this.ty * t, this;
},
skew: function(e, n) {
return e *= t.DEG_TO_RAD, n *= t.DEG_TO_RAD, this.append(Math.cos(n), Math.sin(n), -Math.sin(e), Math.cos(e), 0, 0), this;
},
scale: function(e, t) {
return this.a *= e, this.d *= t, this.tx *= e, this.ty *= t, this;
},
translate: function(e, t) {
return this.tx += e, this.ty += t, this;
},
identity: function() {
return this.alpha = this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.shadow = this.compositeOperation = null, this;
},
invert: function() {
var e = this.a, t = this.b, n = this.c, r = this.d, i = this.tx, s = e * r - t * n;
return this.a = r / s, this.b = -t / s, this.c = -n / s, this.d = e / s, this.tx = (n * this.ty - r * i) / s, this.ty = -(e * this.ty - t * i) / s, this;
},
isIdentity: function() {
return this.tx == 0 && this.ty == 0 && this.a == 1 && this.b == 0 && this.c == 0 && this.d == 1;
},
decompose: function(e) {
e == null && (e = {}), e.x = this.tx, e.y = this.ty, e.scaleX = Math.sqrt(this.a * this.a + this.b * this.b), e.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
var n = Math.atan2(-this.c, this.d), r = Math.atan2(this.b, this.a);
return n == r ? (e.rotation = r / t.DEG_TO_RAD, this.a < 0 && this.d >= 0 && (e.rotation += e.rotation <= 0 ? 180 : -180), e.skewX = e.skewY = 0) : (e.skewX = n / t.DEG_TO_RAD, e.skewY = r / t.DEG_TO_RAD), e;
},
reinitialize: function(e, t, n, r, i, s, o, u, a) {
return this._init(e, t, n, r, i, s), this.alpha = o || 1, this.shadow = u, this.compositeOperation = a, this;
},
appendProperties: function(e, t, n) {
return this.alpha *= e, this.shadow = t || this.shadow, this.compositeOperation = n || this.compositeOperation, this;
},
prependProperties: function(e, t, n) {
return this.alpha *= e, this.shadow = this.shadow || t, this.compositeOperation = this.compositeOperation || n, this;
},
clone: function() {
var e = new t(this.a, this.b, this.c, this.d, this.tx, this.ty);
return e.shadow = this.shadow, e.alpha = this.alpha, e.compositeOperation = this.compositeOperation, e;
},
toString: function() {
return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]";
}
});
return t.DEG_TO_RAD = Math.PI / 180, t.identity = new t(1, 0, 0, 1, 0, 0), t;
});


// @source: ../src/lib/createjs/easeljs/geom/Point.js

xc.module.define("xc.createjs.Point", function(e) {
var t = xc.class.create({
initialize: function(e, t) {
this.x = e == null ? 0 : e, this.y = t == null ? 0 : t;
},
x: 0,
y: 0,
clone: function() {
return new t(this.x, this.y);
},
toString: function() {
return "[Point (x=" + this.x + " y=" + this.y + ")]";
}
});
return t;
});


// @source: ../src/lib/createjs/easeljs/geom/Rectangle.js

xc.module.define("xc.createjs.Rectangle", function(e) {
var t = xc.class.create({
initialize: function(e, t, n, r) {
this.x = e == null ? 0 : e, this.y = t == null ? 0 : t, this.width = n == null ? 0 : n, this.height = r == null ? 0 : r;
},
x: 0,
y: 0,
width: 0,
height: 0,
clone: function() {
return new t(this.x, this.y, this.width, this.height);
},
toString: function() {
return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]";
}
});
return t;
});


// @source: ../src/lib/createjs/easeljs/ui/ButtonHelper.js

xc.module.define("xc.createjs.ButtonHelper", function(e) {
var t = xc.class.create({
initialize: function(e, t, n, r, i, s, o) {
if (!e.addEventListener) return;
this.target = e, e.cursor = "pointer", this.overLabel = n == null ? "over" : n, this.outLabel = t == null ? "out" : t, this.downLabel = r == null ? "down" : r, this.play = i, this.setEnabled(!0), this.handleEvent({}), s && (o && (s.actionsEnabled = !1, s.gotoAndStop && s.gotoAndStop(o)), e.hitArea = s);
},
target: null,
overLabel: null,
outLabel: null,
downLabel: null,
play: !1,
_isPressed: !1,
_isOver: !1,
setEnabled: function(e) {
var t = this.target;
e ? (t.addEventListener("mouseover", this), t.addEventListener("mouseout", this), t.addEventListener("mousedown", this)) : (t.removeEventListener("mouseover", this), t.removeEventListener("mouseout", this), t.removeEventListener("mousedown", this));
},
toString: function() {
return "[ButtonHelper]";
},
handleEvent: function(e) {
var t, n = this.target, r = e.type;
r == "mousedown" ? (e.addEventListener("mouseup", this), this._isPressed = !0, t = this.downLabel) : r == "mouseup" ? (this._isPressed = !1, t = this._isOver ? this.overLabel : this.outLabel) : r == "mouseover" ? (this._isOver = !0, t = this._isPressed ? this.downLabel : this.overLabel) : (this._isOver = !1, t = this._isPressed ? this.overLabel : this.outLabel), this.play ? n.gotoAndPlay && n.gotoAndPlay(t) : n.gotoAndStop && n.gotoAndStop(t);
}
});
return t;
});


// @source: ../src/lib/createjs/easeljs/ui/Touch.js

xc.module.define("xc.createjs.Touch", function(e) {
var t = function() {
throw "Touch\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316";
};
return t.isSupported = function() {
return "ontouchstart" in window || window.navigator.msPointerEnabled;
}, t.enable = function(e, n, r) {
return !e || !e.canvas || !t.isSupported() ? !1 : (e.__touch = {
pointers: {},
multitouch: !n,
preventDefault: !r,
count: 0
}, "ontouchstart" in window ? t._IOS_enable(e) : window.navigator.msPointerEnabled && t._IE_enable(e), !0);
}, t.disable = function(e) {
if (!e) return;
"ontouchstart" in window ? t._IOS_disable(e) : window.navigator.msPointerEnabled && t._IE_disable(e);
}, t._IOS_enable = function(e) {
var n = e.canvas, r = e.__touch.f = function(n) {
t._IOS_handleEvent(e, n);
};
n.addEventListener("touchstart", r, !1), n.addEventListener("touchmove", r, !1), n.addEventListener("touchend", r, !1), n.addEventListener("touchcancel", r, !1);
}, t._IOS_disable = function(e) {
var t = e.canvas;
if (!t) return;
var n = e.__touch.f;
t.removeEventListener("touchstart", n, !1), t.removeEventListener("touchmove", n, !1), t.removeEventListener("touchend", n, !1), t.removeEventListener("touchcancel", n, !1);
}, t._IOS_handleEvent = function(e, t) {
if (!e) return;
e.__touch.preventDefault && t.preventDefault && t.preventDefault();
var n = t.changedTouches, r = t.type;
for (var i = 0, s = n.length; i < s; i++) {
var o = n[i], u = o.identifier;
if (o.target != e.canvas) continue;
r == "touchstart" ? this._handleStart(e, u, t, o.pageX, o.pageY) : r == "touchmove" ? this._handleMove(e, u, t, o.pageX, o.pageY) : (r == "touchend" || r == "touchcancel") && this._handleEnd(e, u, t);
}
}, t._IE_enable = function(e) {
var n = e.canvas, r = e.__touch.f = function(n) {
t._IE_handleEvent(e, n);
};
n.addEventListener("MSPointerDown", r, !1), window.addEventListener("MSPointerMove", r, !1), window.addEventListener("MSPointerUp", r, !1), window.addEventListener("MSPointerCancel", r, !1), e.__touch.preventDefault && (n.style.msTouchAction = "none"), e.__touch.activeIDs = {};
}, t._IE_disable = function(e) {
var t = e.__touch.f;
window.removeEventListener("MSPointerMove", t, !1), window.removeEventListener("MSPointerUp", t, !1), window.removeEventListener("MSPointerCancel", t, !1), e.canvas && e.canvas.removeEventListener("MSPointerDown", t, !1);
}, t._IE_handleEvent = function(e, t) {
if (!e) return;
e.__touch.preventDefault && t.preventDefault && t.preventDefault();
var n = t.type, r = t.pointerId, i = e.__touch.activeIDs;
if (n == "MSPointerDown") {
if (t.srcElement != e.canvas) return;
i[r] = !0, this._handleStart(e, r, t, t.pageX, t.pageY);
} else if (i[r]) if (n == "MSPointerMove") this._handleMove(e, r, t, t.pageX, t.pageY); else if (n == "MSPointerUp" || n == "MSPointerCancel") delete i[r], this._handleEnd(e, r, t);
}, t._handleStart = function(e, t, n, r, i) {
var s = e.__touch;
if (!s.multitouch && s.count) return;
var o = s.pointers;
if (o[t]) return;
o[t] = !0, s.count++, e._handlePointerDown(t, n, r, i);
}, t._handleMove = function(e, t, n, r, i) {
if (!e.__touch.pointers[t]) return;
e._handlePointerMove(t, n, r, i);
}, t._handleEnd = function(e, t, n) {
var r = e.__touch, i = r.pointers;
if (!i[t]) return;
r.count--, e._handlePointerUp(t, n, !0), delete i[t];
}, t;
});


// @source: ../src/lib/createjs/easeljs/utils/Log.js

xc.module.define("xc.createjs.Log", function(e) {
var t = {};
return t.NONE = 0, t.ERROR = 1, t.WARNING = 2, t.TRACE = 3, t.ALL = 255, t.out = function(e, n, r) {
r <= t.level && window.console && (n === undefined ? console.log(e) : console.log(e, n));
}, t.level = 255, t._keys = [], t.addKeys = function(e) {
t._keys.unshift(e);
}, t.log = function(e, n, r) {
var i = t.out;
if (!i) return;
var s = t._keys;
r == null && (r = 3);
for (var o = 0; o < s.length; o++) if (s[o][e]) {
e = s[o][e];
break;
}
i(e, n, r);
}, t;
});


// @source: ../src/lib/createjs/easeljs/utils/SpriteSheetBuilder.js

xc.module.define("xc.createjs.SpriteSheetBuilder", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = xc.module.require("xc.createjs.Rectangle"), r = xc.module.require("xc.createjs.SpriteSheet"), i = t.extend({
initialize: function() {
this._frames = [], this._animations = {};
},
maxWidth: 2048,
maxHeight: 2048,
spriteSheet: null,
scale: 1,
padding: 1,
timeSlice: .3,
progress: -1,
_frames: null,
_animations: null,
_data: null,
_nextFrameIndex: 0,
_index: 0,
_timerID: null,
_scale: 1,
addFrame: function(e, t, n, r, s, o) {
if (this._data) throw i.ERR_RUNNING;
var u = t || e.bounds || e.nominalBounds;
return !u && e.getBounds && (u = e.getBounds()), u ? (n = n || 1, this._frames.push({
source: e,
sourceRect: u,
scale: n,
funct: r,
params: s,
scope: o,
index: this._frames.length,
height: u.height * n
}) - 1) : null;
},
addAnimation: function(e, t, n, r) {
if (this._data) throw i.ERR_RUNNING;
this._animations[e] = {
frames: t,
next: n,
frequency: r
};
},
addMovieClip: function(e, t, n) {
if (this._data) throw i.ERR_RUNNING;
var r = e.frameBounds, s = t || e.bounds || e.nominalBounds;
!s && e.getBounds && (s = e.getBounds());
if (!s && !r) return null;
var o = this._frames.length, u = e.timeline.duration;
for (var a = 0; a < u; a++) {
var f = r && r[a] ? r[a] : s;
this.addFrame(e, f, n, function(e) {
var t = this.actionsEnabled;
this.actionsEnabled = !1, this.gotoAndStop(e), this.actionsEnabled = t;
}, [ a ], e);
}
var l = e.timeline._labels, c = [];
for (var h in l) c.push({
index: l[h],
label: h
});
if (c.length) {
c.sort(function(e, t) {
return e.index - t.index;
});
for (var a = 0, p = c.length; a < p; a++) {
var d = c[a].label, v = o + c[a].index, m = o + (a == p - 1 ? u : c[a + 1].index), g = [];
for (var y = v; y < m; y++) g.push(y);
this.addAnimation(d, g, !0);
}
}
},
build: function() {
if (this._data) throw i.ERR_RUNNING;
this._startBuild();
while (this._drawNext()) ;
return this._endBuild(), this.spriteSheet;
},
buildAsync: function(e) {
if (this._data) throw i.ERR_RUNNING;
this.timeSlice = e, this._startBuild();
var t = this;
this._timerID = setTimeout(function() {
t._run();
}, 50 - Math.max(.01, Math.min(.99, this.timeSlice || .3)) * 50);
},
stopAsync: function() {
clearTimeout(this._timerID), this._data = null;
},
clone: function() {
throw "SpriteSheetBuilder\u5b9e\u4f8b\u4e0d\u80fd\u88ab\u514b\u9686\u3002";
},
toString: function() {
return "[SpriteSheetBuilder]";
},
_startBuild: function() {
var e = this.padding || 0;
this.progress = 0, this.spriteSheet = null, this._index = 0, this._scale = this.scale;
var t = [];
this._data = {
images: [],
frames: t,
animations: this._animations
};
var n = this._frames.slice();
n.sort(function(e, t) {
return e.height <= t.height ? -1 : 1;
});
if (n[n.length - 1].height + e * 2 > this.maxHeight) throw i.ERR_DIMENSIONS;
var r = 0, s = 0, o = 0;
while (n.length) {
var u = this._fillRow(n, r, o, t, e);
u.w > s && (s = u.w), r += u.h;
if (!u.h || !n.length) {
var a = document.createElement("canvas");
a.width = this._getSize(s, this.maxWidth), a.height = this._getSize(r, this.maxHeight), this._data.images[o] = a, u.h || (s = r = 0, o++);
}
}
},
_getSize: function(e, t) {
var n = 4;
while (Math.pow(2, ++n) < e) ;
return Math.min(t, Math.pow(2, n));
},
_fillRow: function(e, t, r, s, o) {
var u = this.maxWidth, a = this.maxHeight;
t += o;
var f = a - t, l = o, c = 0;
for (var h = e.length - 1; h >= 0; h--) {
var p = e[h], d = this._scale * p.scale, v = p.sourceRect, m = p.source, g = Math.floor(d * v.x - o), y = Math.floor(d * v.y - o), b = Math.ceil(d * v.height + o * 2), w = Math.ceil(d * v.width + o * 2);
if (w > u) throw i.ERR_DIMENSIONS;
if (b > f || l + w > u) continue;
p.img = r, p.rect = new n(l, t, w, b), c = c || b, e.splice(h, 1), s[p.index] = [ l, t, w, b, r, Math.round(-g + d * m.regX - o), Math.round(-y + d * m.regY - o) ], l += w;
}
return {
w: l,
h: c
};
},
_endBuild: function() {
this.spriteSheet = new r(this._data), this._data = null, this.progress = 1, this.dispatchEvent("complete");
},
_run: function() {
var e = Math.max(.01, Math.min(.99, this.timeSlice || .3)) * 50, t = (new Date).getTime() + e, n = !1;
while (t > (new Date).getTime()) if (!this._drawNext()) {
n = !0;
break;
}
if (n) this._endBuild(); else {
var r = this;
this._timerID = setTimeout(function() {
r._run();
}, 50 - e);
}
var i = this.progress = this._index / this._frames.length;
this.dispatchEvent({
type: "progress",
progress: i
});
},
_drawNext: function() {
var e = this._frames[this._index], t = e.scale * this._scale, n = e.rect, r = e.sourceRect, i = this._data.images[e.img], s = i.getContext("2d");
return e.funct && e.funct.apply(e.scope, e.params), s.save(), s.beginPath(), s.rect(n.x, n.y, n.width, n.height), s.clip(), s.translate(Math.ceil(n.x - r.x * t), Math.ceil(n.y - r.y * t)), s.scale(t, t), e.source.draw(s), s.restore(), ++this._index < this._frames.length;
}
});
return i.ERR_DIMENSIONS = "\u5e27\u9762\u79ef\u8d85\u51fa\u56fe\u7247\u7cbe\u7075\u6700\u5927\u9762\u79ef\u3002", i.ERR_RUNNING = "\u5df2\u7ecf\u6709\u4e00\u4e2a\u6b63\u5728\u751f\u6210\u7684\u8868\u5355\u4e86\u3002", i;
});


// @source: ../src/lib/createjs/easeljs/utils/SpriteSheetUtils.js

xc.module.define("xc.createjs.SpriteSheetUtils", function(e) {
var t = function() {
throw "SpriteSheetUtils\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002";
};
return t._workingCanvas = document.createElement("canvas"), t._workingContext = t._workingCanvas.getContext("2d"), t.addFlippedFrames = function(e, n, r, i) {
if (!n && !r && !i) return;
var s = 0;
n && t._flip(e, ++s, !0, !1), r && t._flip(e, ++s, !1, !0), i && t._flip(e, ++s, !0, !0);
}, t.extractFrame = function(e, n) {
isNaN(n) && (n = e.getAnimation(n).frames[0]);
var r = e.getFrame(n);
if (!r) return null;
var i = r.rect, s = t._workingCanvas;
s.width = i.width, s.height = i.height, t._workingContext.drawImage(r.image, i.x, i.y, i.width, i.height, 0, 0, i.width, i.height);
var o = new Image;
return o.src = s.toDataURL("image/png"), o;
}, t.mergeAlpha = function(e, t, n) {
n || (n = document.createElement("canvas")), n.width = Math.max(t.width, e.width), n.height = Math.max(t.height, e.height);
var r = n.getContext("2d");
return r.save(), r.drawImage(e, 0, 0), r.globalCompositeOperation = "destination-in", r.drawImage(t, 0, 0), r.restore(), n;
}, t._flip = function(e, n, r, i) {
var s = e._images, o = t._workingCanvas, u = t._workingContext, a = s.length / n;
for (var f = 0; f < a; f++) {
var l = s[f];
l.__tmp = f, o.width = 0, o.width = l.width, o.height = l.height, u.setTransform(r ? -1 : 1, 0, 0, i ? -1 : 1, r ? l.width : 0, i ? l.height : 0), u.drawImage(l, 0, 0);
var c = new Image;
c.src = o.toDataURL("image/png"), c.width = l.width, c.height = l.height, s.push(c);
}
var h = e._frames, p = h.length / n;
for (f = 0; f < p; f++) {
l = h[f];
var d = l.rect.clone();
c = s[l.image.__tmp + a * n];
var v = {
image: c,
rect: d,
regX: l.regX,
regY: l.regY
};
r && (d.x = c.width - d.x - d.width, v.regX = d.width - l.regX), i && (d.y = c.height - d.y - d.height, v.regY = d.height - l.regY), h.push(v);
}
var m = "_" + (r ? "h" : "") + (i ? "v" : ""), g = e._animations, y = e._data, b = g.length / n;
for (f = 0; f < b; f++) {
var w = g[f];
l = y[w];
var E = {
name: w + m,
frequency: l.frequency,
next: l.next,
frames: []
};
l.next && (E.next += m), h = l.frames;
for (var S = 0, x = h.length; S < x; S++) E.frames.push(h[S] + p * n);
y[E.name] = E, g.push(E.name);
}
}, t;
});


// @source: ../src/lib/createjs/easeljs/utils/Ticker.js

xc.module.define("xc.createjs.Ticker", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = function() {
throw "Ticker\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002";
};
n.useRAF = !1, n._listeners = null, n._pauseable = null, n._paused = !1, n._inited = !1, n._startTime = 0, n._pausedTime = 0, n._ticks = 0, n._pausedTicks = 0, n._interval = 50, n._lastTime = 0, n._times = null, n._tickTimes = null, n._rafActive = !1, n._timeoutID = null, n.addListener = function(e, t) {
if (e == null) return;
n.removeListener(e), n._pauseable[n._listeners.length] = t == null ? !0 : t, n._listeners.push(e);
}, n.init = function() {
n._inited = !0, n._times = [], n._tickTimes = [], n._pauseable = [], n._listeners = [], n._times.push(n._lastTime = n._startTime = n._getTime()), n.setInterval(n._interval);
}, n.removeListener = function(e) {
var t = n._listeners;
if (!t) return;
var r = t.indexOf(e);
r != -1 && (t.splice(r, 1), n._pauseable.splice(r, 1));
}, n.removeAllListeners = function() {
n._listeners = [], n._pauseable = [];
}, n.setInterval = function(e) {
n._interval = e;
if (!n._inited) return;
n._setupTick();
}, n.getInterval = function() {
return n._interval;
}, n.setFPS = function(e) {
n.setInterval(1e3 / e);
}, n.getFPS = function() {
return 1e3 / n._interval;
}, n.getMeasuredFPS = function(e) {
return n._times.length < 2 ? -1 : (e == null && (e = n.getFPS() | 0), e = Math.min(n._times.length - 1, e), 1e3 / ((n._times[0] - n._times[e]) / e));
}, n.setPaused = function(e) {
n._paused = e;
}, n.getPaused = function() {
return n._paused;
}, n.getTime = function(e) {
return n._getTime() - n._startTime - (e ? n._pausedTime : 0);
}, n.getTicks = function(e) {
return n._ticks - (e ? n._pausedTicks : 0);
}, n._handleAF = function() {
n._rafActive = !1, n._setupTick(), n._getTime() - n._lastTime >= (n._interval - 1) * .97 && n._tick();
}, n._handleTimeout = function() {
n.timeoutID = null, n._setupTick(), n._tick();
}, n._setupTick = function() {
if (n._rafActive || n.timeoutID != null) return;
if (n.useRAF) {
var e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
if (e) {
e(n._handleAF), n._rafActive = !0;
return;
}
}
n.timeoutID = setTimeout(n._handleTimeout, n._interval);
}, n._tick = function() {
var e = n._getTime();
n._ticks++;
var t = e - n._lastTime, r = n._paused;
r && (n._pausedTicks++, n._pausedTime += t), n._lastTime = e;
var i = n._pauseable, s = n._listeners.slice(), o = s ? s.length : 0;
for (var u = 0; u < o; u++) {
var a = s[u];
if (a == null || r && i[u]) continue;
a.tick ? a.tick(t, r) : a instanceof Function && a(t, r);
}
n.dispatchEvent({
type: "tick",
paused: r,
delta: t,
time: e,
runTime: e - n._pausedTime
}), n._tickTimes.unshift(n._getTime() - e);
while (n._tickTimes.length > 100) n._tickTimes.pop();
n._times.unshift(e);
while (n._times.length > 100) n._times.pop();
};
var r = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);
return n._getTime = function() {
return r && r.call(performance) || (new Date).getTime();
}, t.initialize(n), n.init(), n;
});


// @source: ../src/lib/createjs/easeljs/utils/UID.js

xc.module.define("xc.createjs.UID", function(e) {
var t = function() {
throw "UID\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002";
};
return t._nextID = 0, t.get = function() {
return t._nextID++;
}, t;
});


// @source: ../src/lib/createjs/soundjs/HTMLAudioPlugin.js

xc.module.define("xc.createjs.HTMLAudioPlugin", function(e) {
var t = xc.module.require("xc.createjs.Sound"), n = xc.module.require("xc.createjs.SoundInstance"), r = xc.class.create({
initialize: function(e) {
this.src = e, this.tags = [];
},
src: null,
length: 0,
available: 0,
tags: null,
add: function(e) {
this.tags.push(e), this.length++, this.available++;
},
get: function() {
if (this.tags.length == 0) return null;
this.available = this.tags.length;
var e = this.tags.pop();
return e.parentNode == null && document.body.appendChild(e), e;
},
set: function(e) {
var t = this.tags.indexOf(e);
t == -1 && this.tags.push(e), this.available = this.tags.length;
},
toString: function() {
return "[HTMLAudioPlugin TagPool]";
}
});
r.tags = {}, r.get = function(e) {
var t = r.tags[e];
return t == null && (t = r.tags[e] = new r(e)), t;
}, r.getInstance = function(e) {
var t = r.tags[e];
return t == null ? null : t.get();
}, r.setInstance = function(e, t) {
var n = r.tags[e];
return n == null ? null : n.set(t);
};
var i = n.extend({
initialize: function(e, n) {
this.src = e, this.owner = n, this.endedHandler = t.proxy(this.handleSoundComplete, this), this.readyHandler = t.proxy(this.handleSoundReady, this), this.stalledHandler = t.proxy(this.handleSoundStalled, this);
},
cleanUp: function() {
var e = this.tag;
if (e != null) {
e.pause();
try {
e.currentTime = 0;
} catch (t) {}
e.removeEventListener(o.AUDIO_ENDED, this.endedHandler, !1), e.removeEventListener(o.AUDIO_READY, this.readyHandler, !1), r.setInstance(this.src, e), this.tag = null;
}
this._super();
},
beginPlaying: function(e, t, n, i) {
var s = this.tag = r.getInstance(this.src);
return s == null ? (this.playFailed(), -1) : (this.duration = this.tag.duration * 1e3, s.addEventListener(o.AUDIO_ENDED, this.endedHandler, !1), this.offset = e, this.volume = n, this.updateVolume(), this.remainingLoops = t, s.readyState !== 4 ? (s.addEventListener(o.AUDIO_READY, this.readyHandler, !1), s.addEventListener(o.AUDIO_STALLED, this.stalledHandler, !1), s.load()) : this.handleSoundReady(null), this.sendEvent("succeeded"), 1);
},
handleSoundStalled: function(e) {
this.sendEvent("failed");
},
handleSoundReady: function(e) {
this.playState = t.PLAY_SUCCEEDED, this.paused = !1, this.tag.removeEventListener(o.AUDIO_READY, this.readyHandler, !1);
if (this.offset >= this.getDuration()) {
this.playFailed();
return;
}
this.offset > 0 && (this.tag.currentTime = this.offset * .001), this.remainingLoops == -1 && (this.tag.loop = !0), this.tag.play();
},
handleSoundComplete: function(e) {
this.offset = 0;
if (this.remainingLoops != 0) {
this.remainingLoops--, this.tag.play(), this.sendEvent("loop");
return;
}
this.playState = t.PLAY_FINISHED, this.sendEvent("complete"), this.cleanUp();
},
pause: function() {
return !this.paused && this.playState == t.PLAY_SUCCEEDED && this.tag != null ? (this.paused = !0, this.tag.pause(), clearTimeout(this.delayTimeoutId), !0) : !1;
},
resume: function() {
return !this.paused || this.tag == null ? !1 : (this.paused = !1, this.tag.play(), !0);
},
stop: function() {
return this.offset = 0, this.pause(), this.playState = t.PLAY_FINISHED, this.cleanUp(), !0;
},
setVolume: function(e) {
return Number(e) == null ? !1 : (e = Math.max(0, Math.min(1, e)), this.volume = e, this.updateVolume(), !0);
},
setMasterVolume: function(e) {
return this.updateVolume(), !0;
},
setMasterMute: function(e) {
return this.updateVolume(), !0;
},
updateVolume: function() {
if (this.tag != null) {
var e = this.muted || t.masterMute ? 0 : this.volume * t.masterVolume;
return e != this.tag.volume && (this.tag.volume = e), !0;
}
return !1;
},
setMute: function(e) {
return e == null || e == undefined ? !1 : (this.muted = e, this.updateVolume(), !0);
},
setPan: function(e) {
return !1;
},
getPosition: function() {
return this.tag == null ? this.offset : this.tag.currentTime * 1e3;
},
setPosition: function(e) {
if (this.tag == null) this.offset = e; else try {
this.tag.currentTime = e * .001;
} catch (t) {
return !1;
}
return !0;
},
toString: function() {
return "[HTMLAudioPlugin SoundInstance]";
}
}), s = xc.class.create({
initialize: function(e, n) {
this.src = e, this.tag = n, this.preloadTimer = setInterval(t.proxy(this.preloadTick, this), 200), this.loadedHandler = t.proxy(this.sendLoadedEvent, this), this.loadedHandler = t.proxy(this.sendLoadedEvent, this), this.tag.addEventListener && this.tag.addEventListener("canplaythrough", this.loadedHandler), this.tag.onreadystatechange = t.proxy(this.sendLoadedEvent, this), this.tag.preload = "auto", this.tag.src = e, this.tag.load();
},
src: null,
tag: null,
preloadTimer: null,
loadedHandler: null,
preloadTick: function() {
var e = this.tag.buffered, t = this.tag.duration;
e.length > 0 && e.end(0) >= t - 1 && this.handleTagLoaded();
},
handleTagLoaded: function() {
clearInterval(this.preloadTimer);
},
sendLoadedEvent: function(e) {
this.tag.removeEventListener && this.tag.removeEventListener("canplaythrough", this.loadedHandler), this.tag.onreadystatechange = null, t.sendLoadComplete(this.src);
},
toString: function() {
return "[HTMLAudioPlugin HTMLAudioLoader]";
}
}), o = xc.class.create({
initialize: function() {
this.capabilities = o.capabilities, this.audioSources = {};
},
capabilities: null,
audioSources: null,
defaultNumChannels: 2,
register: function(e, t) {
this.audioSources[e] = !0;
var n = r.get(e), i = null, s = t || this.defaultNumChannels;
for (var o = 0; o < s; o++) i = this.createTag(e), n.add(i);
return {
tag: i,
numChannels: s
};
},
createTag: function(e) {
var t = document.createElement("audio");
return t.autoplay = !1, t.preload = "none", t.src = e, t;
},
create: function(e) {
if (!this.isPreloadStarted(e)) {
var t = r.get(e), n = this.createTag(e);
t.add(n), this.preload(e, {
tag: n
});
}
return new i(e, this);
},
isPreloadStarted: function(e) {
return this.audioSources[e] != null;
},
preload: function(e, t) {
this.audioSources[e] = !0, new s(e, t.tag);
},
toString: function() {
return "[HTMLAudioPlugin]";
}
});
return o.MAX_INSTANCES = 30, o.capabilities = null, o.AUDIO_READY = "canplaythrough", o.AUDIO_ENDED = "ended", o.AUDIO_ERROR = "error", o.AUDIO_STALLED = "stalled", o.isSupported = function() {
return o.generateCapabilities(), o.capabilities == null ? !1 : !0;
}, o.generateCapabilities = function() {
if (o.capabilities != null) return;
var e = document.createElement("audio");
if (e.canPlayType == null) return;
o.capabilities = {
panning: !0,
volume: !0,
tracks: -1
};
var n = t.SUPPORTED_EXTENSIONS, r = t.EXTENSION_MAP;
for (var i = 0, s = n.length; i < s; i++) {
var u = n[i], a = r[u] || u;
o.capabilities[u] = e.canPlayType("audio/" + u) != "no" && e.canPlayType("audio/" + u) != "" || e.canPlayType("audio/" + a) != "no" && e.canPlayType("audio/" + a) != "";
}
}, o;
});


// @source: ../src/lib/createjs/soundjs/Sound.js

xc.module.define("xc.createjs.Sound", function(e) {
function r() {
this.isDefault = !0, this.addEventListener = this.removeEventListener = this.removeAllEventListener = this.dispatchEvent = this.hasEventListener = this._listeners = this.interrupt = this.playFailed = this.pause = this.resume = this.play = this.beginPlaying = this.cleanUp = this.stop = this.setMasterVolume = this.setVolume = this.mute = this.setMute = this.getMute = this.setPan = this.getPosition = this.setPosition = function() {
return !1;
}, this.getVolume = this.getPan = this.getDuration = function() {
return 0;
}, this.playState = n.PLAY_FAILED, this.toString = function() {
return "[Sound Default Sound Instance]";
};
}
var t = xc.module.require("xc.createjs.EventDispatcher"), n = function() {
throw "Sound cannot be instantiated";
};
n.DELIMITER = "|", n.INTERRUPT_EARLY = "early", n.INTERRUPT_LATE = "late", n.INTERRUPT_NONE = "none", n.PLAY_SUCCEEDED = "playSucceeded", n.PLAY_INTERRUPTED = "playInterrupted", n.PLAY_FINISHED = "playFinished", n.PLAY_FAILED = "playFailed", n.SUPPORTED_EXTENSIONS = [ "mp3", "ogg", "mpeg", "wav", "m4a", "mp4", "aiff", "wma", "mid" ], n.EXTENSION_MAP = {
m4a: "mp4"
}, n.FILE_PATTERN = /(\w+:\/{2})?((?:\w+\.){2}\w+)?(\/?[\S]+\/|\/)?([\w\-%\.]+)(?:\.)(\w+)?(\?\S+)?/i, n.defaultInterruptBehavior = n.INTERRUPT_NONE, n.lastId = 0, n.activePlugin = null, n.pluginsRegistered = !1, n.masterVolume = 1, n.masterMute = !1, n.instances = [], n.idHash = {}, n.preloadHash = {}, n.defaultSoundInstance = null, n.sendLoadComplete = function(e) {
if (!n.preloadHash[e]) return;
for (var t = 0, r = n.preloadHash[e].length; t < r; t++) {
var i = n.preloadHash[e][t], s = {
target: this,
type: "loadComplete",
src: i.src,
id: i.id,
data: i.data
};
n.preloadHash[e][t] = !0, n.dispatchEvent(s);
}
}, n.getPreloadHandlers = function() {
return {
callback: n.proxy(n.initLoad, n),
types: [ "sound" ],
extensions: n.SUPPORTED_EXTENSIONS
};
}, n.registerPlugin = function(e) {
return n.pluginsRegistered = !0, e == null ? !1 : e.isSupported() ? (n.activePlugin = new e, !0) : !1;
}, n.registerPlugins = function(e) {
for (var t = 0, r = e.length; t < r; t++) {
var i = e[t];
if (n.registerPlugin(i)) return !0;
}
return !1;
}, n.initializeDefaultPlugins = function() {
if (n.activePlugin != null) return !0;
if (n.pluginsRegistered) return !1;
var e = xc.module.require("xc.createjs.WebAudioPlugin"), t = xc.module.require("xc.createjs.HTMLAudioPlugin");
return n.registerPlugins([ e, t ]) ? !0 : !1;
}, n.isReady = function() {
return n.activePlugin != null;
}, n.getCapabilities = function() {
return n.activePlugin == null ? null : n.activePlugin.capabilities;
}, n.getCapability = function(e) {
return n.activePlugin == null ? null : n.activePlugin.capabilities[e];
}, n.initLoad = function(e, t, r, i) {
var s = n.registerSound(e, r, i, !1);
return s == null ? !1 : s;
}, n.registerSound = function(e, t, r) {
if (!n.initializeDefaultPlugins()) return !1;
e instanceof Object && (e = e.src, t = e.id, r = e.data);
var s = n.parsePath(e, "sound", t, r);
if (s == null) return !1;
t != null && (n.idHash[t] = s.src);
var o = null;
r != null && (isNaN(r.channels) ? isNaN(r) || (o = parseInt(r)) : o = parseInt(r.channels));
var u = n.activePlugin.register(s.src, o);
return u != null && (u.numChannels != null && (o = u.numChannels), i.create(s.src, o), r == null || !isNaN(r) ? r = s.data = o || i.maxPerChannel() : r.channels = s.data.channels = o || i.maxPerChannel(), u.tag != null ? s.tag = u.tag : u.src && (s.src = u.src), u.completeHandler != null && (s.completeHandler = u.completeHandler), s.type = u.type), n.preloadHash[s.src] || (n.preloadHash[s.src] = []), n.preloadHash[s.src].push({
src: e,
id: t,
data: r
}), n.preloadHash[s.src].length == 1 && n.activePlugin.preload(s.src, u), s;
}, n.registerManifest = function(e) {
var t = [];
for (var r = 0, i = e.length; r < i; r++) t[r] = n.registerSound(e[r].src, e[r].id, e[r].data);
return t;
}, n.loadComplete = function(e) {
var t = n.parsePath(e, "sound");
return t ? e = n.getSrcById(t.src) : e = n.getSrcById(e), n.preloadHash[e][0] == 1;
}, n.parsePath = function(e, t, r, i) {
typeof e != "string" && (e = e.toString());
var s = e.split(n.DELIMITER), o = {
type: t || "sound",
id: r,
data: i
}, u = n.getCapabilities();
for (var a = 0, f = s.length; a < f; a++) {
var l = s[a], c = l.match(n.FILE_PATTERN);
if (c == null) return !1;
var h = c[4], p = c[5];
if (u[p] && n.SUPPORTED_EXTENSIONS.indexOf(p) > -1) return o.name = h, o.src = l, o.extension = p, o;
}
return null;
}, n.play = function(e, t, r, i, s, o, u) {
var a = n.createInstance(e), f = n.playInstance(a, t, r, i, s, o, u);
return f || a.playFailed(), a;
}, n.createInstance = function(e) {
if (!n.initializeDefaultPlugins()) return n.defaultSoundInstance;
var t = n.parsePath(e, "sound");
t ? e = n.getSrcById(t.src) : e = n.getSrcById(e);
var r = e.lastIndexOf("."), s = e.slice(r + 1);
if (r != -1 && n.SUPPORTED_EXTENSIONS.indexOf(s) > -1) {
i.create(e);
var o = n.activePlugin.create(e);
} else var o = n.defaultSoundInstance;
return o.uniqueId = n.lastId++, o;
}, n.setVolume = function(e) {
if (Number(e) == null) return !1;
e = Math.max(0, Math.min(1, e)), n.masterVolume = e;
if (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(e)) {
var t = this.instances;
for (var r = 0, i = t.length; r < i; r++) t[r].setMasterVolume(e);
}
}, n.getVolume = function(e) {
return n.masterVolume;
}, n.setMute = function(e) {
if (e == null || e == undefined) return !1;
this.masterMute = e;
if (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(e)) {
var t = this.instances;
for (var n = 0, r = t.length; n < r; n++) t[n].setMasterMute(e);
}
return !0;
}, n.getMute = function() {
return this.masterMute;
}, n.stop = function() {
var e = this.instances;
for (var t = e.length; t > 0; t--) e[t - 1].stop();
}, n.playInstance = function(e, t, r, i, s, o, u) {
t = t || n.defaultInterruptBehavior, r == null && (r = 0), i == null && (i = e.getPosition()), s == null && (s = 0), o == null && (o = e.getVolume()), u == null && (u = e.getPan());
if (r == 0) {
var a = n.beginPlaying(e, t, i, s, o, u);
if (!a) return !1;
} else {
var f = setTimeout(function() {
n.beginPlaying(e, t, i, s, o, u);
}, r);
e.delayTimeoutId = f;
}
return this.instances.push(e), !0;
}, n.beginPlaying = function(e, t, n, r, s, o) {
if (!i.add(e, t)) return !1;
var u = e.beginPlaying(n, r, s, o);
if (!u) {
var a = this.instances.indexOf(e);
return a > -1 && this.instances.splice(a, 1), !1;
}
return !0;
}, n.getSrcById = function(e) {
return n.idHash == null || n.idHash[e] == null ? e : n.idHash[e];
}, n.playFinished = function(e) {
i.remove(e);
var t = this.instances.indexOf(e);
t > -1 && this.instances.splice(t, 1);
}, n.proxy = function(e, t) {
var n = Array.prototype.slice.call(arguments, 2);
return function() {
return e.apply(t, Array.prototype.slice.call(arguments, 0).concat(n));
};
}, n.defaultSoundInstance = new r;
var i = xc.class.create({
initialize: function(e, t) {
this.src = e, this.max = t || this.maxDefault, this.max == -1 && this.max == this.maxDefault, this.instances = [];
},
src: null,
max: null,
maxDefault: 100,
length: 0,
get: function(e) {
return this.instances[e];
},
add: function(e, t) {
return this.getSlot(t, e) ? (this.instances.push(e), this.length++, !0) : !1;
},
remove: function(e) {
var t = this.instances.indexOf(e);
return t == -1 ? !1 : (this.instances.splice(t, 1), this.length--, !0);
},
getSlot: function(e, t) {
var r, i;
for (var s = 0, o = this.max; s < o; s++) {
r = this.get(s);
if (r == null) return !0;
if (e == n.INTERRUPT_NONE && r.playState != n.PLAY_FINISHED) continue;
if (s == 0) {
i = r;
continue;
}
if (r.playState == n.PLAY_FINISHED || r == n.PLAY_INTERRUPTED || r == n.PLAY_FAILED) i = r; else if (e == n.INTERRUPT_EARLY && r.getPosition() < i.getPosition() || e == n.INTERRUPT_LATE && r.getPosition() > i.getPosition()) i = r;
}
return i != null ? (i.interrupt(), this.remove(i), !0) : !1;
},
toString: function() {
return "[Sound SoundChannel]";
}
});
return i.channels = {}, i.create = function(e, t) {
var n = i.get(e);
return n == null ? (i.channels[e] = new i(e, t), !0) : !1;
}, i.add = function(e, t) {
var n = i.get(e.src);
return n == null ? !1 : n.add(e, t);
}, i.remove = function(e) {
var t = i.get(e.src);
return t == null ? !1 : (t.remove(e), !0);
}, i.maxPerChannel = function() {
return i.maxDefault;
}, i.get = function(e) {
return i.channels[e];
}, t.initialize(n), n;
});


// @source: ../src/lib/createjs/soundjs/SoundInstance.js

xc.module.define("xc.createjs.SoundInstance", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = t.extend({
initialize: function(e, t) {},
src: null,
uniqueId: -1,
playState: null,
owner: null,
offset: 0,
volume: 1,
duration: 0,
remainingLoops: 0,
delayTimeoutId: null,
muted: !1,
paused: !1,
pan: 0,
panNode: null,
gainNode: null,
sourceNode: null,
sendEvent: function(e) {
var t = {
target: this,
type: e
};
this.dispatchEvent(t);
},
cleanUp: function() {
clearTimeout(this.delayTimeoutId), createjs.Sound.playFinished(this);
},
interrupt: function() {
this.playState = createjs.Sound.PLAY_INTERRUPTED, this.sendEvent("interrupted"), this.cleanUp(), this.paused = !1;
},
playFailed: function() {
this.playState = createjs.Sound.PLAY_FAILED, this.sendEvent("failed"), this.cleanUp();
},
play: function(e, t, n, r, i, s) {
this.cleanUp(), createjs.Sound.playInstance(this, e, t, n, r, i, s);
},
beginPlaying: function(e, t, n, r) {
throw "not implemented.";
},
pause: function() {
throw "not implemented.";
},
resume: function() {
throw "not implemented.";
},
stop: function() {
throw "not implemented.";
},
setVolume: function(e) {
throw "not implemented.";
},
updateVolume: function() {
throw "not implemented.";
},
getVolume: function() {
return this.volume;
},
setMute: function(e) {
return e == null || e == undefined ? !1 : (this.muted = e, this.updateVolume(), !0);
},
getMute: function() {
return this.muted;
},
getPosition: function() {
throw "not implemented.";
},
setPosition: function(e) {
throw "not implemented.";
},
setPan: function(e) {
throw "not implemented.";
},
getPan: function() {
return this.pan;
},
getDuration: function() {
return this.duration;
}
});
return n;
});


// @source: ../src/lib/createjs/soundjs/WebAudioPlugin.js

xc.module.define("xc.createjs.WebAudioPlugin", function(e) {
var t = xc.module.require("xc.createjs.Sound"), n = xc.module.require("xc.createjs.SoundInstance"), r = n.extend({
initialize: function(e, n) {
this.owner = n, this.src = e, this.panNode = this.owner.context.createPanner(), this.gainNode = this.owner.context.createGainNode(), this.gainNode.connect(this.panNode), this.owner.isPreloadComplete(this.src) && (this.duration = this.owner.arrayBuffers[this.src].duration * 1e3), this.endedHandler = t.proxy(this.handleSoundComplete, this), this.readyHandler = t.proxy(this.handleSoundReady, this), this.stalledHandler = t.proxy(this.handleSoundStalled, this);
},
soundCompleteTimeout: null,
startTime: 0,
cleanUp: function() {
this.sourceNode && this.sourceNode.playbackState != this.sourceNode.UNSCHEDULED_STATE && (this.sourceNode.noteOff(0), this.sourceNode = null), this.panNode.numberOfOutputs != 0 && this.panNode.disconnect(0), clearTimeout(this.delayTimeoutId), clearTimeout(this.soundCompleteTimeout), t.playFinished(this);
},
handleSoundStalled: function(e) {
this.sendEvent("failed");
},
handleSoundReady: function(e) {
if (this.offset > this.getDuration()) {
this.playFailed();
return;
}
this.offset < 0 && (this.offset = 0), this.playState = t.PLAY_SUCCEEDED, this.paused = !1, this.panNode.connect(this.owner.gainNode), this.sourceNode = this.owner.context.createBufferSource(), this.sourceNode.buffer = this.owner.arrayBuffers[this.src], this.duration = this.owner.arrayBuffers[this.src].duration * 1e3, this.sourceNode.connect(this.gainNode), this.soundCompleteTimeout = setTimeout(this.endedHandler, (this.sourceNode.buffer.duration - this.offset) * 1e3), this.startTime = this.owner.context.currentTime - this.offset, this.sourceNode.noteGrainOn(0, this.offset, this.sourceNode.buffer.duration - this.offset);
},
handleSoundComplete: function(e) {
this.offset = 0;
if (this.remainingLoops != 0) {
this.remainingLoops--, this.handleSoundReady(null), this.onLoop != null && this.onLoop(this), this.sendEvent("loop");
return;
}
this.playState = t.PLAY_FINISHED, this.onComplete != null && this.onComplete(this), this.sendEvent("complete"), this.cleanUp();
},
beginPlaying: function(e, t, n, r) {
if (!this.src) return;
this.offset = e / 1e3, this.remainingLoops = t, this.setVolume(n), this.setPan(r);
if (this.owner.isPreloadComplete(this.src)) return this.handleSoundReady(null), this.onPlaySucceeded && this.onPlaySucceeded(this), this.sendEvent("succeeded"), 1;
this.playFailed();
return;
},
pause: function() {
return !this.paused && this.playState == t.PLAY_SUCCEEDED ? (this.paused = !0, this.offset = this.owner.context.currentTime - this.startTime, this.sourceNode.noteOff(0), this.panNode.numberOfOutputs != 0 && this.panNode.disconnect(), clearTimeout(this.delayTimeoutId), clearTimeout(this.soundCompleteTimeout), !0) : !1;
},
resume: function() {
return this.paused ? (this.handleSoundReady(null), !0) : !1;
},
stop: function() {
return this.playState = t.PLAY_FINISHED, this.cleanUp(), this.offset = 0, !0;
},
setVolume: function(e) {
return Number(e) == null ? !1 : (e = Math.max(0, Math.min(1, e)), this.volume = e, this.updateVolume(), !0);
},
updateVolume: function() {
var e = this.muted ? 0 : this.volume;
return e != this.gainNode.gain.value ? (this.gainNode.gain.value = e, !0) : !1;
},
setMute: function(e) {
return e == null || e == undefined ? !1 : (this.muted = e, this.updateVolume(), !0);
},
setPan: function(e) {
if (!this.owner.capabilities.panning) return !1;
this.panNode.setPosition(e, 0, -0.5), this.pan = e;
},
getPosition: function() {
if (this.paused || this.sourceNode == null) var e = this.offset; else var e = this.owner.context.currentTime - this.startTime;
return e * 1e3;
},
setPosition: function(e) {
return this.offset = e / 1e3, this.sourceNode && this.sourceNode.playbackState != this.sourceNode.UNSCHEDULED_STATE && (this.sourceNode.noteOff(0), clearTimeout(this.soundCompleteTimeout)), !this.paused && this.playState == t.PLAY_SUCCEEDED && this.handleSoundReady(null), !0;
},
toString: function() {
return "[WebAudioPlugin SoundInstance]";
}
}), i = xc.class.create({
initialize: function(e, t) {
this.src = e, this.owner = t;
},
request: null,
owner: null,
progress: -1,
src: null,
result: null,
onload: null,
onprogress: null,
onError: null,
load: function(e) {
e != null && (this.src = e), this.request = new XMLHttpRequest, this.request.open("GET", this.src, !0), this.request.responseType = "arraybuffer", this.request.onload = t.proxy(this.handleLoad, this), this.request.onError = t.proxy(this.handleError, this), this.request.onprogress = t.proxy(this.handleProgress, this), this.request.send();
},
handleProgress: function(e, t) {
this.progress = e / t;
if (this.onprogress == null) return;
this.onprogress({
loaded: e,
total: t,
progress: this.progress
});
},
handleLoad: function() {
s.context.decodeAudioData(this.request.response, t.proxy(this.handleAudioDecoded, this), t.proxy(this.handleError, this));
},
handleAudioDecoded: function(e) {
this.progress = 1, this.result = e, this.owner.addPreloadResults(this.src, this.result), this.onload && this.onload();
},
handleError: function(e) {
this.owner.removeFromPreload(this.src), this.onerror && this.onerror(e);
},
toString: function() {
return "[WebAudioPlugin WebAudioLoader]";
}
}), s = xc.class.create({
initialize: function() {
this.capabilities = s.capabilities, this.arrayBuffers = {}, this.context = s.context, this.gainNode = s.gainNode, this.dynamicsCompressorNode = s.dynamicsCompressorNode;
},
capabilities: null,
context: null,
dynamicsCompressorNode: null,
gainNode: null,
arrayBuffers: null,
register: function(e, t) {
this.arrayBuffers[e] = !0;
var n = new i(e, this);
return {
tag: n
};
},
isPreloadStarted: function(e) {
return this.arrayBuffers[e] != null;
},
isPreloadComplete: function(e) {
return this.arrayBuffers[e] != null && this.arrayBuffers[e] != 1;
},
removeFromPreload: function(e) {
delete this.arrayBuffers[e];
},
addPreloadResults: function(e, t) {
this.arrayBuffers[e] = t;
},
handlePreloadComplete: function() {
t.sendLoadComplete(this.src);
},
preload: function(e, t) {
this.arrayBuffers[e] = !0;
var n = new i(e, this);
n.onload = this.handlePreloadComplete, n.load();
},
create: function(e) {
return this.isPreloadStarted(e) || this.preload(e), new r(e, this);
},
toString: function() {
return "[WebAudioPlugin]";
}
});
return s.capabilities = null, s.isSupported = function() {
return location.protocol == "file:" ? !1 : (s.generateCapabilities(), s.context == null ? !1 : !0);
}, s.generateCapabilities = function() {
if (s.capabilities != null) return;
var e = document.createElement("audio");
if (e.canPlayType == null) return null;
if (window.webkitAudioContext) s.context = new webkitAudioContext; else {
if (!window.AudioContext) return null;
s.context = new AudioContext;
}
s.capabilities = {
panning: !0,
volume: !0,
tracks: -1
};
var n = t.SUPPORTED_EXTENSIONS, r = t.EXTENSION_MAP;
for (var i = 0, o = n.length; i < o; i++) {
var u = n[i], a = r[u] || u;
s.capabilities[u] = e.canPlayType("audio/" + u) != "no" && e.canPlayType("audio/" + u) != "" || e.canPlayType("audio/" + a) != "no" && e.canPlayType("audio/" + a) != "";
}
s.context.destination.numberOfChannels < 2 && (s.capabilities.panning = !1), s.dynamicsCompressorNode = s.context.createDynamicsCompressor(), s.dynamicsCompressorNode.connect(s.context.destination), s.gainNode = s.context.createGainNode(), s.gainNode.connect(s.dynamicsCompressorNode);
}, s;
});


// @source: ../src/lib/createjs/tweenjs/CSSPlugin.js

xc.module.define("xc.createjs.CSSPlugin", function(e) {
var t = xc.module.require("xc.createjs.Tween"), n = function() {
throw "CSSPlugin cannot be instantiated.";
};
return n.cssSuffixMap = {
top: "px",
left: "px",
bottom: "px",
right: "px",
width: "px",
height: "px",
opacity: ""
}, n.priority = -100, n.install = function() {
var e = [], r = n.cssSuffixMap;
for (var i in r) e.push(i);
t.installPlugin(n, e);
}, n.init = function(e, t, r) {
var i, s, o, u = n.cssSuffixMap;
if ((i = u[t]) == null || !(o = e.target.style)) return r;
var a = o[t];
if (!a) return 0;
var f = a.length - i.length;
if ((s = a.substr(f)) != i) throw "CSSPlugin Error: Suffixes do not match. (" + i + ":" + s + ")";
return parseInt(a.substr(0, f));
}, n.step = function(e, t, n, r, i) {}, n.tween = function(e, r, i, s, o, u, a, f) {
var l, c = n.cssSuffixMap;
return c[r] == null || !(l = e.target.style) ? i : (l[r] = i + c[r], t.IGNORE);
}, n;
});


// @source: ../src/lib/createjs/tweenjs/Ease.js

xc.module.define("xc.createjs.Ease", function(e) {
var t = function() {
throw "Ease cannot be instantiated.";
};
return t.linear = function(e) {
return e;
}, t.none = t.linear, t.get = function(e) {
return e < -1 && (e = -1), e > 1 && (e = 1), function(t) {
return e == 0 ? t : e < 0 ? t * (t * -e + 1 + e) : t * ((2 - t) * e + (1 - e));
};
}, t.getPowIn = function(e) {
return function(t) {
return Math.pow(t, e);
};
}, t.getPowOut = function(e) {
return function(t) {
return 1 - Math.pow(1 - t, e);
};
}, t.getPowInOut = function(e) {
return function(t) {
return (t *= 2) < 1 ? .5 * Math.pow(t, e) : 1 - .5 * Math.abs(Math.pow(2 - t, e));
};
}, t.quadIn = t.getPowIn(2), t.quadOut = t.getPowOut(2), t.quadInOut = t.getPowInOut(2), t.cubicIn = t.getPowIn(3), t.cubicOut = t.getPowOut(3), t.cubicInOut = t.getPowInOut(3), t.quartIn = t.getPowIn(4), t.quartOut = t.getPowOut(4), t.quartInOut = t.getPowInOut(4), t.quintIn = t.getPowIn(5), t.quintOut = t.getPowOut(5), t.quintInOut = t.getPowInOut(5), t.sineIn = function(e) {
return 1 - Math.cos(e * Math.PI / 2);
}, t.sineOut = function(e) {
return Math.sin(e * Math.PI / 2);
}, t.sineInOut = function(e) {
return -0.5 * (Math.cos(Math.PI * e) - 1);
}, t.getBackIn = function(e) {
return function(t) {
return t * t * ((e + 1) * t - e);
};
}, t.backIn = t.getBackIn(1.7), t.getBackOut = function(e) {
return function(t) {
return --t * t * ((e + 1) * t + e) + 1;
};
}, t.backOut = t.getBackOut(1.7), t.getBackInOut = function(e) {
return e *= 1.525, function(t) {
return (t *= 2) < 1 ? .5 * t * t * ((e + 1) * t - e) : .5 * ((t -= 2) * t * ((e + 1) * t + e) + 2);
};
}, t.backInOut = t.getBackInOut(1.7), t.circIn = function(e) {
return -(Math.sqrt(1 - e * e) - 1);
}, t.circOut = function(e) {
return Math.sqrt(1 - --e * e);
}, t.circInOut = function(e) {
return (e *= 2) < 1 ? -0.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1);
}, t.bounceIn = function(e) {
return 1 - t.bounceOut(1 - e);
}, t.bounceOut = function(e) {
return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375;
}, t.bounceInOut = function(e) {
return e < .5 ? t.bounceIn(e * 2) * .5 : t.bounceOut(e * 2 - 1) * .5 + .5;
}, t.getElasticIn = function(e, t) {
var n = Math.PI * 2;
return function(r) {
if (r == 0 || r == 1) return r;
var i = t / n * Math.asin(1 / e);
return -(e * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - i) * n / t));
};
}, t.elasticIn = t.getElasticIn(1, .3), t.getElasticOut = function(e, t) {
var n = Math.PI * 2;
return function(r) {
if (r == 0 || r == 1) return r;
var i = t / n * Math.asin(1 / e);
return e * Math.pow(2, -10 * r) * Math.sin((r - i) * n / t) + 1;
};
}, t.elasticOut = t.getElasticOut(1, .3), t.getElasticInOut = function(e, t) {
var n = Math.PI * 2;
return function(r) {
var i = t / n * Math.asin(1 / e);
return (r *= 2) < 1 ? -0.5 * e * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - i) * n / t) : e * Math.pow(2, -10 * (r -= 1)) * Math.sin((r - i) * n / t) * .5 + 1;
};
}, t.elasticInOut = t.getElasticInOut(1, .3 * 1.5), t;
});


// @source: ../src/lib/createjs/tweenjs/MotionGuidePlugin.js

xc.module.define("xc.createjs.MotionGuidePlugin", function(e) {
var t = xc.module.require("xc.createjs.Tween"), n = function() {
throw "MotionGuidePlugin cannot be instantiated.";
};
return n.priority = 0, n.install = function() {
return t.installPlugin(n, [ "guide", "x", "y", "rotation" ]), t.IGNORE;
}, n.init = function(e, t, n) {
var r = e.target;
return r.hasOwnProperty("x") || (r.x = 0), r.hasOwnProperty("y") || (r.y = 0), r.hasOwnProperty("rotation") || (r.rotation = 0), t == "guide" ? null : n;
}, n.step = function(e, t, r, i, s) {
if (t != "guide") return i;
var o, u = i;
u.hasOwnProperty("path") || (u.path = []);
var a = u.path;
u.hasOwnProperty("end") || (u.end = 1), u.hasOwnProperty("start") || (u.start = r && r.hasOwnProperty("end") && r.path === a ? r.end : 0);
if (u.hasOwnProperty("_segments") && u._length) return i;
var f = a.length, l = 10;
if (f >= 6 && (f - 2) % 4 == 0) {
u._segments = [], u._length = 0;
for (var c = 2; c < f; c += 4) {
var h = a[c - 2], p = a[c - 1], d = a[c + 0], v = a[c + 1], m = a[c + 2], g = a[c + 3], y = h, b = p, w, E, S = 0, x = [];
for (var T = 1; T <= l; T++) {
var N = T / l, C = 1 - N;
w = C * C * h + 2 * C * N * d + N * N * m, E = C * C * p + 2 * C * N * v + N * N * g, S += x[x.push(Math.sqrt((o = w - y) * o + (o = E - b) * o)) - 1], y = w, b = E;
}
u._segments.push(S), u._segments.push(x), u._length += S;
}
return o = u.orient, u.orient = !1, n.calc(u, u.end, s), u.orient = o, i;
}
throw "invalid 'path' data, please see documentation for valid paths";
}, n.tween = function(e, t, r, i, s, o, u, a) {
var f = s.guide;
if (f == undefined || f === i.guide) return r;
if (f.lastRatio != o) {
var l = (f.end - f.start) * (u ? f.end : o) + f.start;
n.calc(f, l, e.target), f.orient && (e.target.rotation += i.rotation || 0), f.lastRatio = o;
}
return !f.orient && t == "rotation" ? r : e.target[t];
}, n.calc = function(e, t, r) {
e._segments == undefined && n.validate(e), r == undefined && (r = {
x: 0,
y: 0,
rotation: 0
});
var i = e._segments, s = e.path, o = e._length * t, u = i.length - 2, a = 0;
while (o > i[a] && a < u) o -= i[a], a += 2;
var f = i[a + 1], l = 0;
u = f.length - 1;
while (o > f[l] && l < u) o -= f[l], l++;
var c = l / ++u + o / (u * f[l]);
a = a * 2 + 2;
var h = 1 - c;
return r.x = h * h * s[a - 2] + 2 * h * c * s[a + 0] + c * c * s[a + 2], r.y = h * h * s[a - 1] + 2 * h * c * s[a + 1] + c * c * s[a + 3], e.orient && (r.rotation = 57.2957795 * Math.atan2((s[a + 1] - s[a - 1]) * h + (s[a + 3] - s[a + 1]) * c, (s[a + 0] - s[a - 2]) * h + (s[a + 2] - s[a + 0]) * c)), r;
}, n;
});


// @source: ../src/lib/createjs/tweenjs/Timeline.js

xc.module.define("xc.createjs.Timeline", function(e) {
var t = xc.module.require("xc.createjs.Tween"), n = xc.class.create({
initialize: function(e, n, r) {
this._tweens = [], r && (this._useTicks = r.useTicks, this.loop = r.loop, this.ignoreGlobalPause = r.ignoreGlobalPause, this.onChange = r.onChange), e && this.addTween.apply(this, e), this.setLabels(n), r && r.paused ? this._paused = !0 : t._register(this, !0), r && r.position != null && this.setPosition(r.position, t.NONE);
},
ignoreGlobalPause: !1,
duration: 0,
loop: !1,
onChange: null,
position: null,
_paused: !1,
_tweens: null,
_labels: null,
_prevPosition: 0,
_prevPos: -1,
_useTicks: !1,
addTween: function(e) {
var n = arguments.length;
if (n > 1) {
for (var r = 0; r < n; r++) this.addTween(arguments[r]);
return arguments[0];
}
return n == 0 ? null : (this.removeTween(e), this._tweens.push(e), e.setPaused(!0), e._paused = !1, e._useTicks = this._useTicks, e.duration > this.duration && (this.duration = e.duration), this._prevPos >= 0 && e.setPosition(this._prevPos, t.NONE), e);
},
removeTween: function(e) {
var t = arguments.length;
if (t > 1) {
var n = !0;
for (var r = 0; r < t; r++) n = n && this.removeTween(arguments[r]);
return n;
}
if (t == 0) return !1;
var i = this._tweens.indexOf(e);
return i != -1 ? (this._tweens.splice(i, 1), e.duration >= this.duration && this.updateDuration(), !0) : !1;
},
addLabel: function(e, t) {
this._labels[e] = t;
},
setLabels: function(e) {
this._labels = e ? e : {};
},
gotoAndPlay: function(e) {
this.setPaused(!1), this._goto(e);
},
gotoAndStop: function(e) {
this.setPaused(!0), this._goto(e);
},
setPosition: function(e, t) {
e < 0 && (e = 0);
var n = this.loop ? e % this.duration : e, r = !this.loop && e >= this.duration;
if (n == this._prevPos) return r;
this._prevPosition = e, this.position = this._prevPos = n;
for (var i = 0, s = this._tweens.length; i < s; i++) {
this._tweens[i].setPosition(n, t);
if (n != this._prevPos) return !1;
}
return r && this.setPaused(!0), this.onChange && this.onChange(this), r;
},
setPaused: function(e) {
this._paused = !!e, t._register(this, !e);
},
updateDuration: function() {
this.duration = 0;
for (var e = 0, t = this._tweens.length; e < t; e++) tween = this._tweens[e], tween.duration > this.duration && (this.duration = tween.duration);
},
tick: function(e) {
this.setPosition(this._prevPosition + e);
},
resolve: function(e) {
var t = parseFloat(e);
return isNaN(t) && (t = this._labels[e]), t;
},
toString: function() {
return "[Timeline]";
},
clone: function() {
throw "Timeline can not be cloned.";
},
_goto: function(e) {
var t = this.resolve(e);
t != null && this.setPosition(t);
}
});
return n;
});


// @source: ../src/lib/createjs/tweenjs/Tween.js

xc.module.define("xc.createjs.Tween", function(e) {
var t = xc.module.require("xc.createjs.Ticker"), r = xc.module.require("xc.createjs.EventDispatcher"), i = xc.class.create({
initialize: function(e, t, n) {
this.target = this._target = e, t && (this._useTicks = t.useTicks, this.ignoreGlobalPause = t.ignoreGlobalPause, this.loop = t.loop, this.onChange = t.onChange, t.override && i.removeTweens(e)), this.pluginData = n || {}, this._curQueueProps = {}, this._initQueueProps = {}, this._steps = [], this._actions = [], t && t.paused ? this._paused = !0 : i._register(this, !0), t && t.position != null && this.setPosition(t.position, i.NONE), this.w = this.wait, this.t = this.to, this.c = this.call, this.s = this.set;
},
ignoreGlobalPause: !1,
loop: !1,
duration: 0,
pluginData: null,
onChange: null,
change: null,
target: null,
position: null,
_paused: !1,
_curQueueProps: null,
_initQueueProps: null,
_steps: null,
_actions: null,
_prevPosition: 0,
_stepPosition: 0,
_prevPos: -1,
_target: null,
_useTicks: !1,
addEventListener: null,
removeEventListener: null,
removeAllEventListeners: null,
dispatchEvent: null,
hasEventListener: null,
_listeners: null,
wait: function(e) {
if (e == null || e <= 0) return this;
var t = this._cloneProps(this._curQueueProps);
return this._addStep({
d: e,
p0: t,
e: this._linearEase,
p1: t
});
},
to: function(e, t, n) {
if (isNaN(t) || t < 0) t = 0;
return this._addStep({
d: t || 0,
p0: this._cloneProps(this._curQueueProps),
e: n,
p1: this._cloneProps(this._appendQueueProps(e))
});
},
call: function(e, t, n) {
return this._addAction({
f: e,
p: t ? t : [ this ],
o: n ? n : this._target
});
},
set: function(e, t) {
return this._addAction({
f: this._set,
o: this,
p: [ e, t ? t : this._target ]
});
},
play: function(e) {
return this.call(e.setPaused, [ !1 ], e);
},
pause: function(e) {
return e || (e = this), this.call(e.setPaused, [ !0 ], e);
},
setPosition: function(e, t) {
e < 0 && (e = 0), t == null && (t = 1);
var n = e, r = !1;
n >= this.duration && (this.loop ? n %= this.duration : (n = this.duration, r = !0));
if (n == this._prevPos) return r;
var i = this._prevPos;
this.position = this._prevPos = n, this._prevPosition = e;
if (this._target) if (r) this._updateTargetProps(null, 1); else if (this._steps.length > 0) {
for (var s = 0, o = this._steps.length; s < o; s++) if (this._steps[s].t > n) break;
var u = this._steps[s - 1];
this._updateTargetProps(u, (this._stepPosition = n - u.t) / u.d);
}
return t != 0 && this._actions.length > 0 && (this._useTicks ? this._runActions(n, n) : t == 1 && n < i ? (i != this.duration && this._runActions(i, this.duration), this._runActions(0, n, !0)) : this._runActions(i, n)), r && this.setPaused(!0), this.onChange && this.onChange(this), this.dispatchEvent("change"), r;
},
tick: function(e) {
if (this._paused) return;
this.setPosition(this._prevPosition + e);
},
setPaused: function(e) {
return this._paused = !!e, i._register(this, !e), this;
},
toString: function() {
return "[Tween]";
},
clone: function() {
throw "Tween can not be cloned.";
},
_updateTargetProps: function(e, t) {
var r, s, o, u, a, f;
!e && t == 1 ? r = s = this._curQueueProps : (e.e && (t = e.e(t, 0, 1, 1)), r = e.p0, s = e.p1);
for (n in this._initQueueProps) {
(u = r[n]) == null && (r[n] = u = this._initQueueProps[n]), (a = s[n]) == null && (s[n] = a = u), u == a || t == 0 || t == 1 || typeof u != "number" ? o = t == 1 ? a : u : o = u + (a - u) * t;
var l = !1;
if (f = i._plugins[n]) for (var c = 0, h = f.length; c < h; c++) {
var p = f[c].tween(this, n, o, r, s, t, !!e && r == s, !e);
p == i.IGNORE ? l = !0 : o = p;
}
l || (this._target[n] = o);
}
},
_runActions: function(e, t, n) {
var r = e, i = t, s = -1, o = this._actions.length, u = 1;
e > t && (r = t, i = e, s = o, o = u = -1);
while ((s += u) != o) {
var a = this._actions[s], f = a.t;
(f == i || f > r && f < i || n && f == e) && a.f.apply(a.o, a.p);
}
},
_appendQueueProps: function(e) {
var t, n, r, s, o;
for (var u in e) {
if (this._initQueueProps[u] === undefined) {
n = this._target[u];
if (t = i._plugins[u]) for (r = 0, s = t.length; r < s; r++) n = t[r].init(this, u, n);
this._initQueueProps[u] = n === undefined ? null : n;
} else n = this._curQueueProps[u];
if (t = i._plugins[u]) {
o = o || {};
for (r = 0, s = t.length; r < s; r++) t[r].step && t[r].step(this, u, n, e[u], o);
}
this._curQueueProps[u] = e[u];
}
return o && this._appendQueueProps(o), this._curQueueProps;
},
_cloneProps: function(e) {
var t = {};
for (var n in e) t[n] = e[n];
return t;
},
_addStep: function(e) {
return e.d > 0 && (this._steps.push(e), e.t = this.duration, this.duration += e.d), this;
},
_addAction: function(e) {
return e.t = this.duration, this._actions.push(e), this;
},
_set: function(e, t) {
for (var n in e) t[n] = e[n];
}
});
return i.NONE = 0, i.LOOP = 1, i.REVERSE = 2, i.IGNORE = {}, i._tweens = [], i._plugins = {}, i.get = function(e, t, n, r) {
return r && i.removeTweens(e), new i(e, t, n);
}, i.tick = function(e, t) {
var n = i._tweens.slice();
for (var r = n.length - 1; r >= 0; r--) {
var s = n[r];
if (t && !s.ignoreGlobalPause || s._paused) continue;
s.tick(s._useTicks ? 1 : e);
}
}, i.removeTweens = function(e) {
if (!e.tweenjs_count) return;
var t = i._tweens;
for (var n = t.length - 1; n >= 0; n--) t[n]._target == e && (t[n]._paused = !0, t.splice(n, 1));
e.tweenjs_count = 0;
}, i.hasActiveTweens = function(e) {
return e ? e.tweenjs_count : i._tweens && i._tweens.length;
}, i.installPlugin = function(e, t) {
var n = e.priority;
n == null && (e.priority = n = 0);
for (var r = 0, s = t.length, o = i._plugins; r < s; r++) {
var u = t[r];
if (!o[u]) o[u] = [ e ]; else {
var a = o[u];
for (var f = 0, l = a.length; f < l; f++) if (n < a[f].priority) break;
o[u].splice(f, 0, e);
}
}
}, i._register = function(e, t) {
var n = e._target;
if (t) n && (n.tweenjs_count = n.tweenjs_count ? n.tweenjs_count + 1 : 1), i._tweens.push(e); else {
n && n.tweenjs_count--;
var r = i._tweens.indexOf(e);
r != -1 && i._tweens.splice(r, 1);
}
}, r.initialize(i.prototype), t.addListener(i, !1), i;
});


// @source: ../src/lib/createjs/preloadjs/errors/errors_zh-cn.js

var logs = {
PRELOAD_NO_FILE: "\u6307\u5b9a\u7684\u6587\u4ef6\u4e3a\u7a7a\u3002",
PRELOAD_MANIFEST_EMPTY: "\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868\u4e3a\u7a7a\u3002",
PRELOAD_MANIFEST_NULL: "manifest\u53c2\u6570\u4e3a\u7a7a\u3002",
PRELOAD_TIMEOUT: "\u52a0\u8f7d\u8d85\u65f6\u3002"
}, Log = xc.module.require("xc.createjs.Log");

Log.addKeys(logs);


// @source: ../src/lib/createjs/preloadjs/AbstractLoader.js

xc.module.define("xc.createjs.AbstractLoader", function(e) {
var t = xc.module.require("xc.createjs.EventDispatcher"), n = t.extend({
initialize: function() {},
loaded: !1,
canceled: !1,
progress: 0,
_item: null,
getItem: function() {
return this._item;
},
load: function() {},
close: function() {},
toString: function() {
return "[PreloadJS AbstractLoader]";
},
_sendLoadStart: function() {
if (this._isCanceled()) return;
this.dispatchEvent("loadStart");
},
_sendProgress: function(e) {
if (this._isCanceled()) return;
var t = null;
if (typeof e == "number") this.progress = e, t = {
loaded: this.progress,
total: 1
}; else {
t = e, this.progress = e.loaded / e.total;
if (isNaN(this.progress) || this.progress == Infinity) this.progress = 0;
}
t.target = this, t.type = "progress", this.dispatchEvent(t);
},
_sendComplete: function() {
if (this._isCanceled()) return;
this.dispatchEvent("complete");
},
_sendError: function(e) {
if (this._isCanceled()) return;
e == null && (e = {}), e.target = this, e.type = "error", this.dispatchEvent(e);
},
_isCanceled: function() {
return window.createjs == null || this.canceled ? !0 : !1;
},
_parseURI: function(e) {
return e ? e.match(n.FILE_PATTERN) : null;
}
});
return n.FILE_PATTERN = /(\w+:\/{2})?((?:\w+\.){2}\w+)?(\/?[\S]+\/|\/)?([\w\-%\.]+)(?:\.)(\w+)?(\?\S+)?/i, n;
});


// @source: ../src/lib/createjs/preloadjs/TagLoader.js

xc.module.define("xc.createjs.TagLoader", function(e) {
var t = xc.module.require("xc.createjs.AbstractLoader"), n = t.extend({
initialize: function(e) {
this._item = e, this._tag = e.tag, this._isAudio = window.HTMLAudioElement && e.tag instanceof HTMLAudioElement, this._tagCompleteProxy = createjs.proxy(this._handleLoad, this);
},
_loadTimeout: null,
_tagCompleteProxy: null,
_isAudio: !1,
_tag: null,
getResult: function() {
return this._tag;
},
cancel: function() {
this.canceled = !0, this._clean();
var e = this.getItem();
},
load: function() {
var e = this._item, t = this._tag;
clearTimeout(this._loadTimeout), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), createjs.LoadQueue.LOAD_TIMEOUT), this._isAudio && (t.src = null, t.preload = "auto"), t.onerror = createjs.proxy(this._handleError, this), this._isAudio ? (t.onstalled = createjs.proxy(this._handleStalled, this), t.addEventListener("canplaythrough", this._tagCompleteProxy, !1)) : (t.onload = createjs.proxy(this._handleLoad, this), t.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this));
switch (e.type) {
case createjs.LoadQueue.CSS:
t.href = e.src;
break;
case createjs.LoadQueue.SVG:
t.data = e.src;
break;
default:
t.src = e.src;
}
(e.type == createjs.LoadQueue.SVG || e.type == createjs.LoadQueue.JAVASCRIPT || e.type == createjs.LoadQueue.CSS) && (document.body || document.getElementsByTagName("body")[0]).appendChild(t), t.load != null && t.load();
},
toString: function() {
return "[PreloadJS TagLoader]";
},
_handleTimeout: function() {
this._clean(), this._sendError({
reason: "PRELOAD_TIMEOUT"
});
},
_handleStalled: function() {},
_handleError: function() {
this._clean(), this._sendError();
},
_handleReadyStateChange: function() {
clearTimeout(this._loadTimeout);
var e = this.getItem().tag;
e.readyState == "loaded" && this._handleLoad();
},
_handleLoad: function(e) {
if (this._isCanceled()) return;
var t = this.getItem(), n = t.tag;
if (this.loaded || this.isAudio && n.readyState !== 4) return;
this.loaded = !0, t.type == createjs.LoadQueue.SVG && (document.body || document.getElementsByTagName("body")[0]).removeChild(n), this._clean(), this._sendComplete();
},
_clean: function() {
clearTimeout(this._loadTimeout);
var e = this.getItem().tag;
e.onload = null, e.removeEventListener && e.removeEventListener("canplaythrough", this._tagCompleteProxy, !1), e.onstalled = null, e.onprogress = null, e.onerror = null, e.parentNode && e.parentNode.removeChild(e);
}
});
return n;
});


// @source: ../src/lib/createjs/preloadjs/XHRLoader.js

xc.module.define("xc.createjs.XHRLoader", function(e) {
var t = xc.module.require("xc.createjs.AbstractLoader"), n = t.extend({
initialize: function(e) {
this._item = e, !this._createXHR(e);
},
_request: null,
_loadTimeout: null,
_xhrLevel: 1,
_response: null,
_rawResponse: null,
getResult: function(e) {
return e && this._rawResponse ? this._rawResponse : this._response;
},
cancel: function() {
this.canceled = !0, this._clean(), this._request.abort();
},
load: function() {
if (this._request == null) {
this._handleError();
return;
}
this._request.onloadstart = createjs.proxy(this._handleLoadStart, this), this._request.onprogress = createjs.proxy(this._handleProgress, this), this._request.onabort = createjs.proxy(this._handleAbort, this), this._request.onerror = createjs.proxy(this._handleError, this), this._request.ontimeout = createjs.proxy(this._handleTimeout, this), this._xhrLevel == 1 && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), createjs.LoadQueue.LOAD_TIMEOUT)), this._request.onload = createjs.proxy(this._handleLoad, this), this._request.onreadystatechange && (this._request.onreadystatechange = this._handleReadyStateChange(this));
try {
this._request.send();
} catch (e) {
this._sendError({
source: e
});
}
},
toString: function() {
return "[PreloadJS XHRLoader]";
},
_handleProgress: function(e) {
if (e.loaded > 0 && e.total == 0) return;
this._sendProgress({
loaded: e.loaded,
total: e.total
});
},
_handleLoadStart: function(e) {
clearTimeout(this._loadTimeout), this._sendLoadStart();
},
_handleAbort: function(e) {
this._clean(), this._sendError();
},
_handleError: function(e) {
this._clean(), this._sendError();
},
_handleReadyStateChange: function(e) {
this._request.readyState == 4 && this._handleLoad();
},
_handleLoad: function(e) {
if (this.loaded) return;
this.loaded = !0;
if (!this._checkError()) {
this._handleError();
return;
}
this._response = this._getResponse(), this._clean();
var t = this._generateTag();
t && this._sendComplete();
},
_handleTimeout: function(e) {
this._clean(), this._sendError({
reason: "PRELOAD_TIMEOUT"
});
},
_checkError: function() {
var e = parseInt(this._request.status);
switch (e) {
case 404:
case 0:
return !1;
}
return !0;
},
_getResponse: function() {
if (this._response != null) return this._response;
if (this._request.response != null) return this._request.response;
try {
if (this._request.responseText != null) return this._request.responseText;
} catch (e) {}
try {
if (this._request.responseXML != null) return this._request.responseXML;
} catch (e) {}
return null;
},
_createXHR: function(e) {
var t = document.createElement("a");
t.href = e.src;
var n = document.createElement("a");
n.href = location.href;
var r = t.hostname != "" && (t.port != n.port || t.protocol != n.protocol || t.hostname != n.hostname), i = null;
if (r && window.XDomainRequest) i = new XDomainRequest; else if (window.XMLHttpRequest) i = new XMLHttpRequest; else try {
i = new ActiveXObject("Msxml2.XMLHTTP.6.0");
} catch (s) {
try {
i = new ActiveXObject("Msxml2.XMLHTTP.3.0");
} catch (s) {
try {
i = new ActiveXObject("Msxml2.XMLHTTP");
} catch (s) {
return !1;
}
}
}
return e.type == createjs.LoadQueue.TEXT && i.overrideMimeType && i.overrideMimeType("text/plain; charset=x-user-defined"), this._xhrLevel = typeof i.responseType == "string" ? 2 : 1, i.open("GET", e.src, !0), r && i instanceof XMLHttpRequest && this._xhrLevel == 1 && i.setRequestHeader("Origin", location.origin), createjs.LoadQueue.isBinary(e.type) && (i.responseType = "arraybuffer"), this._request = i, !0;
},
_clean: function() {
clearTimeout(this._loadTimeout);
var e = this._request;
e.onloadstart = null, e.onprogress = null, e.onabort = null, e.onerror = null, e.onload = null, e.ontimeout = null, e.onloadend = null, e.onreadystatechange = null;
},
_generateTag: function() {
var e = this._item.type, t = this._item.tag;
switch (e) {
case createjs.LoadQueue.IMAGE:
return t.onload = createjs.proxy(this._handleTagReady, this), t.src = this._item.src, this._rawResponse = this._response, this._response = t, !1;
case createjs.LoadQueue.JAVASCRIPT:
return t = document.createElement("script"), t.text = this._response, this._rawResponse = this._response, this._response = t, !0;
case createjs.LoadQueue.CSS:
var n = document.getElementsByTagName("head")[0];
n.appendChild(t);
if (t.styleSheet) t.styleSheet.cssText = this._response; else {
var r = document.createTextNode(this._response);
t.appendChild(r);
}
return this._rawResponse = this._response, this._response = t, !0;
case createjs.LoadQueue.XML:
var i = this._parseXML(this._response, "text/xml");
return this._response = i, !0;
case createjs.LoadQueue.SVG:
var i = this._parseXML(this._response, "image/svg+xml");
return this._rawResponse = this._response, t.appendChild(i.documentElement), this._response = t, !0;
case createjs.LoadQueue.JSON:
var s = {};
try {
s = JSON.parse(this._response);
} catch (o) {
s = null;
}
return this._rawResponse = this._response, this._response = s, !0;
}
return !0;
},
_parseXML: function(e, t) {
var n = null;
if (window.DOMParser) {
var r = new DOMParser;
n = r.parseFromString(e, t);
} else n = new ActiveXObject("Microsoft.XMLDOM"), n.async = !1, n.loadXML(e);
return n;
},
_handleTagReady: function() {
this._sendComplete();
}
});
return n;
});


// @source: ../src/lib/createjs/preloadjs/LoadQueue.js

xc.module.define("xc.createjs.LoadQueue", function(e) {
var t = xc.module.require("xc.createjs.AbstractLoader"), n = xc.module.require("xc.createjs.XHRLoader"), r = xc.module.require("xc.createjs.TagLoader"), s = t.extend({
initialize: function(e) {
this._numItems = this._numItemsLoaded = 0, this._paused = !1, this._loadStartWasDispatched = !1, this._currentLoads = [], this._loadQueue = [], this._loadQueueBackup = [], this._scriptOrder = [], this._loadedScripts = [], this._loadItemsById = {}, this._loadItemsBySrc = {}, this._loadedResults = {}, this._loadedRawResults = {}, this._typeCallbacks = {}, this._extensionCallbacks = {}, this.setUseXHR(e);
},
useXHR: !0,
stopOnError: !1,
maintainScriptOrder: !0,
next: null,
_typeCallbacks: null,
_extensionCallbacks: null,
_loadStartWasDispatched: !1,
_maxConnections: 1,
_currentlyLoadingScript: null,
_currentLoads: null,
_loadQueue: null,
_loadQueueBackup: null,
_loadItemsById: null,
_loadItemsBySrc: null,
_loadedResults: null,
_loadedRawResults: null,
_numItems: 0,
_numItemsLoaded: 0,
_scriptOrder: null,
_loadedScripts: null,
setUseXHR: function(e) {
return this.useXHR = e != 0 && window.XMLHttpRequest != null, this.useXHR;
},
removeAll: function() {
this.remove();
},
remove: function(e) {
var t = null;
!e || e instanceof Array ? e && (t = e) : t = [ e ];
var n = !1;
if (!t) {
this.close();
for (var r in this._loadItemsById) this._disposeItem(this._loadItemsById[r]);
this.initialize(this.useXHR);
} else {
while (t.length) {
var i = t.pop(), s = this.getResult(i);
for (o = this._loadQueue.length - 1; o >= 0; o--) {
u = this._loadQueue[o].getItem();
if (u.id == i || u.src == i) {
this._loadQueue.splice(o, 1)[0].cancel();
break;
}
}
for (o = this._loadQueueBackup.length - 1; o >= 0; o--) {
u = this._loadQueueBackup[o].getItem();
if (u.id == i || u.src == i) {
this._loadQueueBackup.splice(o, 1)[0].cancel();
break;
}
}
if (s) delete this._loadItemsById[s.id], delete this._loadItemsBySrc[s.src], this._disposeItem(s); else for (var o = this._currentLoads.length - 1; o >= 0; o--) {
var u = this._currentLoads[o].getItem();
if (u.id == i || u.src == i) {
this._currentLoads.splice(o, 1)[0].cancel(), n = !0;
break;
}
}
}
n && this._loadNext();
}
},
reset: function() {
this.close();
for (var e in this._loadItemsById) this._disposeItem(this._loadItemsById[e]);
var t = [];
for (i = 0, l = this._loadQueueBackup.length; i < l; i++) t.push(this._loadQueueBackup[i].getItem());
this.loadManifest(t, !1);
},
installPlugin: function(e) {
if (e == null || e.getPreloadHandlers == null) return;
var t = e.getPreloadHandlers();
if (t.types != null) for (var n = 0, r = t.types.length; n < r; n++) this._typeCallbacks[t.types[n]] = t.callback;
if (t.extensions != null) for (n = 0, r = t.extensions.length; n < r; n++) this._extensionCallbacks[t.extensions[n]] = t.callback;
},
setMaxConnections: function(e) {
this._maxConnections = e, this._paused || this._loadNext();
},
loadFile: function(e, t) {
if (e == null) {
this._sendError({
text: "PRELOAD_NO_FILE"
});
return;
}
this._addItem(e), t !== !1 && this.setPaused(!1);
},
loadManifest: function(e, t) {
var n = null;
if (e instanceof Array) {
if (e.length == 0) {
this._sendError({
text: "PRELOAD_MANIFEST_EMPTY"
});
return;
}
n = e;
} else {
if (e == null) {
this._sendError({
text: "PRELOAD_MANIFEST_NULL"
});
return;
}
n = [ e ];
}
for (var r = 0, i = n.length; r < i; r++) this._addItem(n[r]);
t !== !1 && this.setPaused(!1);
},
load: function() {
this.setPaused(!1);
},
getItem: function(e) {
return this._loadItemsById[e] || this._loadItemsBySrc[e];
},
getResult: function(e, t) {
var n = this._loadItemsById[e] || this._loadItemsBySrc[e];
if (n == null) return null;
var r = n.id;
return t && this._loadedRawResults[r] ? this._loadedRawResults[r] : this._loadedResults[r];
},
setPaused: function(e) {
this._paused = e, this._paused || this._loadNext();
},
close: function() {
while (this._currentLoads.length) this._currentLoads.pop().cancel();
this._scriptOrder.length = 0, this._loadedScripts.length = 0, this.loadStartWasDispatched = !1;
},
toString: function() {
return "[PreloadJS LoadQueue]";
},
_addItem: function(e) {
var t = this._createLoadItem(e);
if (t == null) return;
var r = this._createLoader(t);
r != null && (this._loadQueue.push(r), this._loadQueueBackup.push(r), this._numItems++, this._updateProgress(), this.maintainScriptOrder && t.type == s.JAVASCRIPT && r instanceof n && (this._scriptOrder.push(t), this._loadedScripts.push(null)));
},
_createLoadItem: function(e) {
var t = null;
switch (typeof e) {
case "string":
t = {
src: e
};
break;
case "object":
window.HTMLAudioElement && e instanceof HTMLAudioElement ? t = {
tag: e,
src: t.tag.src,
type: s.SOUND
} : t = e;
break;
default:
}
var n = this._parseURI(t.src);
n != null && (t.ext = n[5]), t.type == null && (t.type = this._getTypeByExtension(t.ext)), t.tag == null && (t.tag = this._createTag(t.type));
if (t.id == null || t.id == "") t.id = t.src;
var r = this._typeCallbacks[t.type] || this._extensionCallbacks[t.ext];
if (r) {
var i = r(t.src, t.type, t.id, t.data);
if (i === !1) return null;
i !== !0 && (i.src != null && (t.src = i.src), i.id != null && (t.id = i.id), i.tag != null && i.tag.load instanceof Function && (t.tag = i.tag), i.completeHandler != null && (t.completeHandler = i.completeHandler)), i.type && (t.type = i.type), n = this._parseURI(t.src), n != null && (t.ext = n[5]);
}
return this._loadItemsById[t.id] = t, this._loadItemsBySrc[t.src] = t, t;
},
_createLoader: function(e) {
var t = this.useXHR;
switch (e.type) {
case s.JSON:
case s.XML:
case s.TEXT:
t = !0;
break;
case s.SOUND:
t = !1;
}
return t ? new n(e) : new r(e);
},
_loadNext: function() {
if (this._paused) return;
this._loadStartWasDispatched || (this._sendLoadStart(), this._loadStartWasDispatched = !0), this._numItems == this._numItemsLoaded && (this.loaded = !0, this._sendComplete(), this.next && this.next.load && this.next.load());
for (var e = 0, t = this._loadQueue.length; e < t; e++) {
if (this._currentLoads.length >= this._maxConnections) break;
var n = this._loadQueue[e];
if (this.maintainScriptOrder && n instanceof r && n.getItem().type == s.JAVASCRIPT) {
if (this._currentlyLoadingScript) continue;
this._currentlyLoadingScript = !0;
}
this._loadQueue.splice(e, 1), this._loadItem(n), e--, t--;
}
},
_loadItem: function(e) {
e.addEventListener("progress", createjs.proxy(this._handleProgress, this)), e.addEventListener("complete", createjs.proxy(this._handleFileComplete, this)), e.addEventListener("error", createjs.proxy(this._handleFileError, this)), this._currentLoads.push(e), e.load();
},
_handleFileError: function(e) {
var t = e.target;
this._numItemsLoaded++, this._updateProgress();
var e = {
item: t.getItem()
};
this._sendError(e), this.stopOnError || (this._removeLoadItem(t), this._loadNext());
},
_handleFileComplete: function(e) {
var t = e.target, i = t.getItem();
this._loadedResults[i.id] = t.getResult(), t instanceof n && (this._loadedRawResults[i.id] = t.getResult(!0)), this._removeLoadItem(t);
if (this.maintainScriptOrder && i.type == s.JAVASCRIPT) {
if (!(t instanceof r)) {
this._loadedScripts[this._scriptOrder.indexOf(i)] = i, this._checkScriptLoadOrder(t);
return;
}
this._currentlyLoadingScript = !1;
}
this._processFinishedLoad(i);
},
_processFinishedLoad: function(e) {
this._numItemsLoaded++, this._updateProgress(), this._sendFileComplete(e), this._loadNext();
},
_checkScriptLoadOrder: function() {
var e = this._loadedScripts.length;
for (var t = 0; t < e; t++) {
var n = this._loadedScripts[t];
if (n === null) break;
if (n === !0) continue;
this._processFinishedLoad(n), this._loadedScripts[t] = !0, t--, e--;
}
},
_removeLoadItem: function(e) {
var t = this._currentLoads.length;
for (var n = 0; n < t; n++) if (this._currentLoads[n] == e) {
this._currentLoads.splice(n, 1);
break;
}
},
_handleProgress: function(e) {
var t = e.target;
this._sendFileProgress(t.getItem(), t.progress), this._updateProgress();
},
_updateProgress: function() {
var e = this._numItemsLoaded / this._numItems, t = this._numItems - this._numItemsLoaded;
if (t > 0) {
var n = 0;
for (var r = 0, i = this._currentLoads.length; r < i; r++) n += this._currentLoads[r].progress;
e += n / t * (t / this._numItems);
}
this._sendProgress(e);
},
_disposeItem: function(e) {
delete this._loadedResults[e.id], delete this._loadedRawResults[e.id], delete this._loadItemsById[e.id], delete this._loadItemsBySrc[e.src];
},
_createTag: function(e) {
var t = null;
switch (e) {
case s.IMAGE:
return document.createElement("img");
case s.SOUND:
return t = document.createElement("audio"), t.autoplay = !1, t;
case s.JAVASCRIPT:
return t = document.createElement("script"), t.type = "text/javascript", t;
case s.CSS:
return this.useXHR ? t = document.createElement("style") : t = document.createElement("link"), t.rel = "stylesheet", t.type = "text/css", t;
case s.SVG:
return this.useXHR ? t = document.createElement("svg") : (t = document.createElement("object"), t.type = "image/svg+xml"), t;
}
return null;
},
_getTypeByExtension: function(e) {
switch (e) {
case "jpeg":
case "jpg":
case "gif":
case "png":
case "webp":
case "bmp":
return s.IMAGE;
case "ogg":
case "mp3":
case "wav":
return s.SOUND;
case "json":
return s.JSON;
case "xml":
return s.XML;
case "css":
return s.CSS;
case "js":
return s.JAVASCRIPT;
case "svg":
return s.SVG;
default:
return s.TEXT;
}
},
_sendFileProgress: function(e, t) {
if (this._isCanceled()) {
this._cleanUp();
return;
}
var n = {
target: this,
type: "fileprogress",
progress: t,
loaded: t,
total: 1,
item: e
};
this.dispatchEvent(n);
},
_sendFileComplete: function(e) {
if (this._isCanceled()) return;
var t = {
target: this,
type: "fileload",
item: e,
result: this._loadedResults[e.id],
rawResult: this._loadedRawResults[e.id]
};
e.completeHandler && e.completeHandler(t), this.dispatchEvent(t);
}
});
s.LOAD_TIMEOUT = 8e3, s.BINARY = "binary", s.CSS = "css", s.IMAGE = "image", s.JAVASCRIPT = "javascript", s.JSON = "json", s.SOUND = "sound", s.SVG = "svg", s.TEXT = "text", s.XML = "xml", s.isBinary = function(e) {
switch (e) {
case s.IMAGE:
case s.BINARY:
return !0;
default:
return !1;
}
};
var o = function() {};
return o.init = function() {
var e = navigator.userAgent;
o.isFirefox = e.indexOf("Firefox") > -1, o.isOpera = window.opera != null, o.isChrome = e.indexOf("Chrome") > -1, o.isIOS = e.indexOf("iPod") > -1 || e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1;
}, o.init(), s.BrowserDetect = o, createjs.proxy = function(e, t) {
var n = Array.prototype.slice.call(arguments, 2);
return function() {
return e.apply(t, Array.prototype.slice.call(arguments, 0).concat(n));
};
}, s;
});


// @source: ../src/lib/createjs/createjs.js

var createjs = {}, ids = xc.module.getIds(), match = [];

for (var i = ids.length - 1; i >= 0; i--) null !== (match = ids[i].match(/xc\.createjs\.(\w+)/)) && (createjs[match[1]] = xc.module.require(ids[i]));
